

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Mar 10 16:19:46 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 12/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0004                     fsr             equ	4
    51     0004                     fsr0            equ	4
    52     0000                     indf            equ	0
    53     0000                     indf0           equ	0
    54     0002                     pc              equ	2
    55     0002                     pcl             equ	2
    56     000A                     pclath          equ	10
    57     0003                     status          equ	3
    58     0000                     INDF            equ	0	;# 
    59     0001                     TMR0            equ	1	;# 
    60     0002                     PCL             equ	2	;# 
    61     0003                     STATUS          equ	3	;# 
    62     0004                     FSR             equ	4	;# 
    63     0005                     PORTA           equ	5	;# 
    64     0006                     PORTB           equ	6	;# 
    65     0007                     PORTC           equ	7	;# 
    66     0008                     PORTD           equ	8	;# 
    67     0009                     PORTE           equ	9	;# 
    68     000A                     PCLATH          equ	10	;# 
    69     000B                     INTCON          equ	11	;# 
    70     000C                     PIR1            equ	12	;# 
    71     000D                     PIR2            equ	13	;# 
    72     000E                     TMR1            equ	14	;# 
    73     000E                     TMR1L           equ	14	;# 
    74     000F                     TMR1H           equ	15	;# 
    75     0010                     T1CON           equ	16	;# 
    76     0011                     TMR2            equ	17	;# 
    77     0012                     T2CON           equ	18	;# 
    78     0013                     SSPBUF          equ	19	;# 
    79     0014                     SSPCON          equ	20	;# 
    80     0015                     CCPR1           equ	21	;# 
    81     0015                     CCPR1L          equ	21	;# 
    82     0016                     CCPR1H          equ	22	;# 
    83     0017                     CCP1CON         equ	23	;# 
    84     0018                     RCSTA           equ	24	;# 
    85     0019                     TXREG           equ	25	;# 
    86     001A                     RCREG           equ	26	;# 
    87     001B                     CCPR2           equ	27	;# 
    88     001B                     CCPR2L          equ	27	;# 
    89     001C                     CCPR2H          equ	28	;# 
    90     001D                     CCP2CON         equ	29	;# 
    91     001E                     ADRESH          equ	30	;# 
    92     001F                     ADCON0          equ	31	;# 
    93     0081                     OPTION_REG      equ	129	;# 
    94     0085                     TRISA           equ	133	;# 
    95     0086                     TRISB           equ	134	;# 
    96     0087                     TRISC           equ	135	;# 
    97     0088                     TRISD           equ	136	;# 
    98     0089                     TRISE           equ	137	;# 
    99     008C                     PIE1            equ	140	;# 
   100     008D                     PIE2            equ	141	;# 
   101     008E                     PCON            equ	142	;# 
   102     0091                     SSPCON2         equ	145	;# 
   103     0092                     PR2             equ	146	;# 
   104     0093                     SSPADD          equ	147	;# 
   105     0094                     SSPSTAT         equ	148	;# 
   106     0098                     TXSTA           equ	152	;# 
   107     0099                     SPBRG           equ	153	;# 
   108     009C                     CMCON           equ	156	;# 
   109     009D                     CVRCON          equ	157	;# 
   110     009E                     ADRESL          equ	158	;# 
   111     009F                     ADCON1          equ	159	;# 
   112     010C                     EEDATA          equ	268	;# 
   113     010D                     EEADR           equ	269	;# 
   114     010E                     EEDATH          equ	270	;# 
   115     010F                     EEADRH          equ	271	;# 
   116     018C                     EECON1          equ	396	;# 
   117     018D                     EECON2          equ	397	;# 
   118     0000                     INDF            equ	0	;# 
   119     0001                     TMR0            equ	1	;# 
   120     0002                     PCL             equ	2	;# 
   121     0003                     STATUS          equ	3	;# 
   122     0004                     FSR             equ	4	;# 
   123     0005                     PORTA           equ	5	;# 
   124     0006                     PORTB           equ	6	;# 
   125     0007                     PORTC           equ	7	;# 
   126     0008                     PORTD           equ	8	;# 
   127     0009                     PORTE           equ	9	;# 
   128     000A                     PCLATH          equ	10	;# 
   129     000B                     INTCON          equ	11	;# 
   130     000C                     PIR1            equ	12	;# 
   131     000D                     PIR2            equ	13	;# 
   132     000E                     TMR1            equ	14	;# 
   133     000E                     TMR1L           equ	14	;# 
   134     000F                     TMR1H           equ	15	;# 
   135     0010                     T1CON           equ	16	;# 
   136     0011                     TMR2            equ	17	;# 
   137     0012                     T2CON           equ	18	;# 
   138     0013                     SSPBUF          equ	19	;# 
   139     0014                     SSPCON          equ	20	;# 
   140     0015                     CCPR1           equ	21	;# 
   141     0015                     CCPR1L          equ	21	;# 
   142     0016                     CCPR1H          equ	22	;# 
   143     0017                     CCP1CON         equ	23	;# 
   144     0018                     RCSTA           equ	24	;# 
   145     0019                     TXREG           equ	25	;# 
   146     001A                     RCREG           equ	26	;# 
   147     001B                     CCPR2           equ	27	;# 
   148     001B                     CCPR2L          equ	27	;# 
   149     001C                     CCPR2H          equ	28	;# 
   150     001D                     CCP2CON         equ	29	;# 
   151     001E                     ADRESH          equ	30	;# 
   152     001F                     ADCON0          equ	31	;# 
   153     0081                     OPTION_REG      equ	129	;# 
   154     0085                     TRISA           equ	133	;# 
   155     0086                     TRISB           equ	134	;# 
   156     0087                     TRISC           equ	135	;# 
   157     0088                     TRISD           equ	136	;# 
   158     0089                     TRISE           equ	137	;# 
   159     008C                     PIE1            equ	140	;# 
   160     008D                     PIE2            equ	141	;# 
   161     008E                     PCON            equ	142	;# 
   162     0091                     SSPCON2         equ	145	;# 
   163     0092                     PR2             equ	146	;# 
   164     0093                     SSPADD          equ	147	;# 
   165     0094                     SSPSTAT         equ	148	;# 
   166     0098                     TXSTA           equ	152	;# 
   167     0099                     SPBRG           equ	153	;# 
   168     009C                     CMCON           equ	156	;# 
   169     009D                     CVRCON          equ	157	;# 
   170     009E                     ADRESL          equ	158	;# 
   171     009F                     ADCON1          equ	159	;# 
   172     010C                     EEDATA          equ	268	;# 
   173     010D                     EEADR           equ	269	;# 
   174     010E                     EEDATH          equ	270	;# 
   175     010F                     EEADRH          equ	271	;# 
   176     018C                     EECON1          equ	396	;# 
   177     018D                     EECON2          equ	397	;# 
   178                           
   179                           	psect	idataBANK0
   180     06D2                     __pidataBANK0:
   181                           
   182                           ;initializer for _name
   183     06D2  3453               	retlw	83
   184     06D3  3441               	retlw	65
   185     06D4  3447               	retlw	71
   186     06D5  3441               	retlw	65
   187     06D6  3452               	retlw	82
   188     06D7  3400               	retlw	0
   189     06D8  3400               	retlw	0
   190     06D9  3400               	retlw	0
   191     06DA  3400               	retlw	0
   192     06DB  3400               	retlw	0
   193     06DC  3400               	retlw	0
   194     06DD  3400               	retlw	0
   195     06DE  3400               	retlw	0
   196     06DF  3400               	retlw	0
   197     06E0  3400               	retlw	0
   198     06E1  3400               	retlw	0
   199     06E2  3400               	retlw	0
   200     06E3  3400               	retlw	0
   201     0008                     _PORTD          set	8
   202     0007                     _PORTC          set	7
   203     0088                     _TRISD          set	136
   204     0087                     _TRISC          set	135
   205                           
   206                           	psect	cinit
   207     07EB                     start_initialization:	
   208                           ; #config settings
   209                           
   210     07EB                     __initialization:
   211                           
   212                           ; Initialize objects allocated to BANK0
   213     07EB  1383               	bcf	3,7	;select IRP bank0
   214     07EC  3032               	movlw	low (__pdataBANK0+18)
   215     07ED  00FD               	movwf	btemp+-1
   216     07EE  3006               	movlw	high __pidataBANK0
   217     07EF  00FE               	movwf	btemp
   218     07F0  30D2               	movlw	low __pidataBANK0
   219     07F1  00FF               	movwf	btemp+1
   220     07F2  3020               	movlw	low __pdataBANK0
   221     07F3  0084               	movwf	4
   222     07F4  120A  118A  26E8  120A  118A  	fcall	init_ram0
   223                           
   224                           ; Clear objects allocated to COMMON
   225     07F9  01F9               	clrf	__pbssCOMMON& (0+127)
   226     07FA  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   227     07FB  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   228     07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231     07FC                     __end_of__initialization:
   232     07FC  0183               	clrf	3
   233     07FD  120A  118A  2F2A   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	bssCOMMON
   236     0079                     __pbssCOMMON:
   237     0079                     _m:
   238     0079                     	ds	1
   239     007A                     _i:
   240     007A                     	ds	1
   241     007B                     _x:
   242     007B                     	ds	1
   243                           
   244                           	psect	dataBANK0
   245     0020                     __pdataBANK0:
   246     0020                     _name:
   247     0020                     	ds	18
   248                           
   249                           	psect	inittext
   250     06E4                     init_fetch0:	
   251                           ;	Called with low address in FSR and high address in W
   252                           
   253     06E4  087E               	movf	btemp,w
   254     06E5  008A               	movwf	10
   255     06E6  087F               	movf	btemp+1,w
   256     06E7  0082               	movwf	2
   257     06E8                     init_ram0:	
   258                           ;Called with:
   259                           ;	high address of idata address in btemp 
   260                           ;	low address of idata address in btemp+1 
   261                           ;	low address of data in FSR
   262                           ;	high address + 1 of data in btemp-1
   263                           
   264     06E8  120A  118A  26E4  120A  118A  	fcall	init_fetch0
   265     06ED  0080               	movwf	0
   266     06EE  0A84               	incf	4,f
   267     06EF  0804               	movf	4,w
   268     06F0  067D               	xorwf	btemp+-1,w
   269     06F1  1903               	btfsc	3,2
   270     06F2  3400               	retlw	0
   271     06F3  0AFF               	incf	btemp+1,f
   272     06F4  1903               	btfsc	3,2
   273     06F5  0AFE               	incf	btemp,f
   274     06F6  2EE8               	goto	init_ram0
   275                           
   276                           	psect	cstackCOMMON
   277     0070                     __pcstackCOMMON:
   278     0070                     ?_Lcdinit:
   279     0070                     ?_LcdCommand:	
   280                           ; 1 bytes @ 0x0
   281                           
   282     0070                     ?_LcdData:	
   283                           ; 1 bytes @ 0x0
   284                           
   285     0070                     ?_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288     0070                     ??_LcdCommand:	
   289                           ; 1 bytes @ 0x0
   290                           
   291     0070                     ??_LcdData:	
   292                           ; 1 bytes @ 0x0
   293                           
   294                           
   295                           ; 1 bytes @ 0x0
   296     0070                     	ds	3
   297     0073                     LcdData@i:
   298     0073                     LcdCommand@i:	
   299                           ; 1 bytes @ 0x3
   300                           
   301                           
   302                           ; 1 bytes @ 0x3
   303     0073                     	ds	1
   304     0074                     ??_Lcdinit:
   305                           
   306                           ; 1 bytes @ 0x4
   307     0074                     	ds	3
   308     0077                     main@i:
   309     0077                     ??_main:	
   310                           ; 1 bytes @ 0x7
   311                           
   312                           
   313                           ; 1 bytes @ 0x7
   314     0077                     	ds	1
   315     0078                     main@i_56:
   316                           
   317                           ; 1 bytes @ 0x8
   318     0078                     	ds	1
   319                           
   320                           	psect	maintext
   321     072A                     __pmaintext:	
   322 ;;
   323 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   324 ;;
   325 ;; *************** function _main *****************
   326 ;; Defined at:
   327 ;;		line 22 in file "main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  i               1    8[COMMON] unsigned char 
   332 ;;  i               1    7[COMMON] unsigned char 
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : B00/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   342 ;;      Params:         0       0       0       0       0
   343 ;;      Locals:         2       0       0       0       0
   344 ;;      Temps:          0       0       0       0       0
   345 ;;      Totals:         2       0       0       0       0
   346 ;;Total ram usage:        2 bytes
   347 ;; Hardware stack levels required when called: 2
   348 ;; This function calls:
   349 ;;		_LcdCommand
   350 ;;		_LcdData
   351 ;;		_Lcdinit
   352 ;; This function is called by:
   353 ;;		Startup code after reset
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357     072A                     _main:	
   358                           ;psect for function _main
   359                           
   360     072A                     l633:	
   361                           ;incstack = 0
   362                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   363                           
   364                           
   365                           ;main.c: 24:     Lcdinit();
   366     072A  120A  118A  2767  120A  118A  	fcall	_Lcdinit
   367     072F                     l635:
   368                           
   369                           ;main.c: 25:     for (uint8_t i = 0; i < 11; i++)
   370     072F  01F7               	clrf	main@i
   371     0730                     l641:
   372                           
   373                           ;main.c: 26:     {;main.c: 27:         LcdCommand((uint8_t)(0x80 + i));
   374     0730  0877               	movf	main@i,w
   375     0731  3E80               	addlw	128
   376     0732  120A  118A  2710  120A  118A  	fcall	_LcdCommand
   377     0737                     l643:
   378                           
   379                           ;main.c: 28:         LcdData(name[i]);
   380     0737  0877               	movf	main@i,w
   381     0738  3E20               	addlw	(low (_name| 0))& (0+255)
   382     0739  0084               	movwf	4
   383     073A  1383               	bcf	3,7	;select IRP bank0
   384     073B  0800               	movf	0,w
   385     073C  120A  118A  26F7  120A  118A  	fcall	_LcdData
   386     0741                     l645:
   387                           
   388                           ;main.c: 29:     }
   389     0741  3001               	movlw	1
   390     0742  07F7               	addwf	main@i,f
   391     0743                     l647:
   392     0743  300B               	movlw	11
   393     0744  0277               	subwf	main@i,w
   394     0745  1C03               	skipc
   395     0746  2F48               	goto	u11
   396     0747  2F49               	goto	u10
   397     0748                     u11:
   398     0748  2F30               	goto	l641
   399     0749                     u10:
   400     0749                     l649:
   401                           
   402                           ;main.c: 30:     for (uint8_t i = 0; i < 11; i++)
   403     0749  01F8               	clrf	main@i_56
   404     074A                     l655:
   405                           
   406                           ;main.c: 31:     {;main.c: 32:         LcdCommand((uint8_t)(0xCF - i));
   407     074A  0878               	movf	main@i_56,w
   408     074B  3CCF               	sublw	207
   409     074C  120A  118A  2710  120A  118A  	fcall	_LcdCommand
   410     0751                     l657:
   411                           
   412                           ;main.c: 33:         LcdData(name[i]);
   413     0751  0878               	movf	main@i_56,w
   414     0752  3E20               	addlw	(low (_name| 0))& (0+255)
   415     0753  0084               	movwf	4
   416     0754  1383               	bcf	3,7	;select IRP bank0
   417     0755  0800               	movf	0,w
   418     0756  120A  118A  26F7  120A  118A  	fcall	_LcdData
   419     075B                     l659:
   420                           
   421                           ;main.c: 34:     }
   422     075B  3001               	movlw	1
   423     075C  07F8               	addwf	main@i_56,f
   424     075D                     l661:
   425     075D  300B               	movlw	11
   426     075E  0278               	subwf	main@i_56,w
   427     075F  1C03               	skipc
   428     0760  2F62               	goto	u21
   429     0761  2F63               	goto	u20
   430     0762                     u21:
   431     0762  2F4A               	goto	l655
   432     0763                     u20:
   433     0763                     l33:	
   434                           ;main.c: 36:     while(1);
   435                           
   436     0763  2F63               	goto	l33
   437     0764  120A  118A  2800   	ljmp	start
   438     0767                     __end_of_main:
   439                           
   440                           	psect	text1
   441     0767                     __ptext1:	
   442 ;; *************** function _Lcdinit *****************
   443 ;; Defined at:
   444 ;;		line 39 in file "main.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, status,2, status,0, pclath, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   458 ;;      Params:         0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0
   460 ;;      Temps:          3       0       0       0       0
   461 ;;      Totals:         3       0       0       0       0
   462 ;;Total ram usage:        3 bytes
   463 ;; Hardware stack levels used: 1
   464 ;; Hardware stack levels required when called: 1
   465 ;; This function calls:
   466 ;;		_LcdCommand
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472     0767                     _Lcdinit:	
   473                           ;psect for function _Lcdinit
   474                           
   475     0767                     l597:	
   476                           ;incstack = 0
   477                           ; Regs used in _Lcdinit: [wreg+status,2+status,0+pclath+cstack]
   478                           
   479                           
   480                           ;main.c: 41:     TRISC = 0x00;
   481     0767  1683               	bsf	3,5	;RP0=1, select bank1
   482     0768  1303               	bcf	3,6	;RP1=0, select bank1
   483     0769  0187               	clrf	7	;volatile
   484                           
   485                           ;main.c: 42:     TRISD = 0x00;
   486     076A  0188               	clrf	8	;volatile
   487     076B                     l599:
   488                           
   489                           ;main.c: 43:     _delay((unsigned long)((100)*(20000000/4000.0)));
   490     076B  3003               	movlw	3
   491     076C  00F6               	movwf	??_Lcdinit+2
   492     076D  308A               	movlw	138
   493     076E  00F5               	movwf	??_Lcdinit+1
   494     076F  3055               	movlw	85
   495     0770  00F4               	movwf	??_Lcdinit
   496     0771                     u37:
   497     0771  0BF4               	decfsz	??_Lcdinit,f
   498     0772  2F71               	goto	u37
   499     0773  0BF5               	decfsz	??_Lcdinit+1,f
   500     0774  2F71               	goto	u37
   501     0775  0BF6               	decfsz	??_Lcdinit+2,f
   502     0776  2F71               	goto	u37
   503     0777  2F78               	nop2
   504     0778                     l601:
   505                           
   506                           ;main.c: 44:     LcdCommand(0x30);
   507     0778  3030               	movlw	48
   508     0779  120A  118A  2710  120A  118A  	fcall	_LcdCommand
   509     077E                     l603:
   510                           
   511                           ;main.c: 45:     _delay((unsigned long)((100)*(20000000/4000.0)));
   512     077E  3003               	movlw	3
   513     077F  00F6               	movwf	??_Lcdinit+2
   514     0780  308A               	movlw	138
   515     0781  00F5               	movwf	??_Lcdinit+1
   516     0782  3055               	movlw	85
   517     0783  00F4               	movwf	??_Lcdinit
   518     0784                     u47:
   519     0784  0BF4               	decfsz	??_Lcdinit,f
   520     0785  2F84               	goto	u47
   521     0786  0BF5               	decfsz	??_Lcdinit+1,f
   522     0787  2F84               	goto	u47
   523     0788  0BF6               	decfsz	??_Lcdinit+2,f
   524     0789  2F84               	goto	u47
   525     078A  2F8B               	nop2
   526     078B                     l605:
   527                           
   528                           ;main.c: 46:     LcdCommand(0x30);
   529     078B  3030               	movlw	48
   530     078C  120A  118A  2710  120A  118A  	fcall	_LcdCommand
   531     0791                     l607:
   532                           
   533                           ;main.c: 47:     _delay((unsigned long)((100)*(20000000/4000.0)));
   534     0791  3003               	movlw	3
   535     0792  00F6               	movwf	??_Lcdinit+2
   536     0793  308A               	movlw	138
   537     0794  00F5               	movwf	??_Lcdinit+1
   538     0795  3055               	movlw	85
   539     0796  00F4               	movwf	??_Lcdinit
   540     0797                     u57:
   541     0797  0BF4               	decfsz	??_Lcdinit,f
   542     0798  2F97               	goto	u57
   543     0799  0BF5               	decfsz	??_Lcdinit+1,f
   544     079A  2F97               	goto	u57
   545     079B  0BF6               	decfsz	??_Lcdinit+2,f
   546     079C  2F97               	goto	u57
   547     079D  2F9E               	nop2
   548     079E                     l609:
   549                           
   550                           ;main.c: 48:     LcdCommand(0x30);
   551     079E  3030               	movlw	48
   552     079F  120A  118A  2710  120A  118A  	fcall	_LcdCommand
   553     07A4                     l611:
   554                           
   555                           ;main.c: 49:     _delay((unsigned long)((100)*(20000000/4000.0)));
   556     07A4  3003               	movlw	3
   557     07A5  00F6               	movwf	??_Lcdinit+2
   558     07A6  308A               	movlw	138
   559     07A7  00F5               	movwf	??_Lcdinit+1
   560     07A8  3055               	movlw	85
   561     07A9  00F4               	movwf	??_Lcdinit
   562     07AA                     u67:
   563     07AA  0BF4               	decfsz	??_Lcdinit,f
   564     07AB  2FAA               	goto	u67
   565     07AC  0BF5               	decfsz	??_Lcdinit+1,f
   566     07AD  2FAA               	goto	u67
   567     07AE  0BF6               	decfsz	??_Lcdinit+2,f
   568     07AF  2FAA               	goto	u67
   569     07B0  2FB1               	nop2
   570     07B1                     l613:
   571                           
   572                           ;main.c: 50:     LcdCommand(0x38);
   573     07B1  3038               	movlw	56
   574     07B2  120A  118A  2710  120A  118A  	fcall	_LcdCommand
   575     07B7                     l615:
   576                           
   577                           ;main.c: 51:     _delay((unsigned long)((100)*(20000000/4000.0)));
   578     07B7  3003               	movlw	3
   579     07B8  00F6               	movwf	??_Lcdinit+2
   580     07B9  308A               	movlw	138
   581     07BA  00F5               	movwf	??_Lcdinit+1
   582     07BB  3055               	movlw	85
   583     07BC  00F4               	movwf	??_Lcdinit
   584     07BD                     u77:
   585     07BD  0BF4               	decfsz	??_Lcdinit,f
   586     07BE  2FBD               	goto	u77
   587     07BF  0BF5               	decfsz	??_Lcdinit+1,f
   588     07C0  2FBD               	goto	u77
   589     07C1  0BF6               	decfsz	??_Lcdinit+2,f
   590     07C2  2FBD               	goto	u77
   591     07C3  2FC4               	nop2
   592     07C4                     l617:
   593                           
   594                           ;main.c: 52:     LcdCommand(0x0C);
   595     07C4  300C               	movlw	12
   596     07C5  120A  118A  2710  120A  118A  	fcall	_LcdCommand
   597     07CA                     l619:
   598                           
   599                           ;main.c: 53:     _delay((unsigned long)((100)*(20000000/4000.0)));
   600     07CA  3003               	movlw	3
   601     07CB  00F6               	movwf	??_Lcdinit+2
   602     07CC  308A               	movlw	138
   603     07CD  00F5               	movwf	??_Lcdinit+1
   604     07CE  3055               	movlw	85
   605     07CF  00F4               	movwf	??_Lcdinit
   606     07D0                     u87:
   607     07D0  0BF4               	decfsz	??_Lcdinit,f
   608     07D1  2FD0               	goto	u87
   609     07D2  0BF5               	decfsz	??_Lcdinit+1,f
   610     07D3  2FD0               	goto	u87
   611     07D4  0BF6               	decfsz	??_Lcdinit+2,f
   612     07D5  2FD0               	goto	u87
   613     07D6  2FD7               	nop2
   614     07D7                     l621:
   615                           
   616                           ;main.c: 54:     LcdCommand(0x01);
   617     07D7  3001               	movlw	1
   618     07D8  120A  118A  2710  120A  118A  	fcall	_LcdCommand
   619     07DD                     l623:
   620                           
   621                           ;main.c: 55:     _delay((unsigned long)((100)*(20000000/4000.0)));
   622     07DD  3003               	movlw	3
   623     07DE  00F6               	movwf	??_Lcdinit+2
   624     07DF  308A               	movlw	138
   625     07E0  00F5               	movwf	??_Lcdinit+1
   626     07E1  3055               	movlw	85
   627     07E2  00F4               	movwf	??_Lcdinit
   628     07E3                     u97:
   629     07E3  0BF4               	decfsz	??_Lcdinit,f
   630     07E4  2FE3               	goto	u97
   631     07E5  0BF5               	decfsz	??_Lcdinit+1,f
   632     07E6  2FE3               	goto	u97
   633     07E7  0BF6               	decfsz	??_Lcdinit+2,f
   634     07E8  2FE3               	goto	u97
   635     07E9  2FEA               	nop2
   636     07EA                     l39:
   637     07EA  0008               	return
   638     07EB                     __end_of_Lcdinit:
   639                           
   640                           	psect	text2
   641     0710                     __ptext2:	
   642 ;; *************** function _LcdCommand *****************
   643 ;; Defined at:
   644 ;;		line 68 in file "main.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  i               1    wreg     unsigned char 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  i               1    3[COMMON] unsigned char 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   658 ;;      Params:         0       0       0       0       0
   659 ;;      Locals:         1       0       0       0       0
   660 ;;      Temps:          3       0       0       0       0
   661 ;;      Totals:         4       0       0       0       0
   662 ;;Total ram usage:        4 bytes
   663 ;; Hardware stack levels used: 1
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_main
   668 ;;		_Lcdinit
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672     0710                     _LcdCommand:	
   673                           ;psect for function _LcdCommand
   674                           
   675                           
   676                           ;incstack = 0
   677                           ; Regs used in _LcdCommand: [wreg+status,2+status,0]
   678                           ;LcdCommand@i stored from wreg
   679     0710  00F3               	movwf	LcdCommand@i
   680     0711                     l589:
   681                           
   682                           ;main.c: 68: void LcdCommand(uint8_t i);main.c: 69: {;main.c: 70:     PORTC &= ~(0x1 << 
      +                          3);
   683     0711  30F7               	movlw	247
   684     0712  1283               	bcf	3,5	;RP0=0, select bank0
   685     0713  1303               	bcf	3,6	;RP1=0, select bank0
   686     0714  0587               	andwf	7,f	;volatile
   687     0715                     l591:
   688                           
   689                           ;main.c: 71:     PORTD = i;
   690     0715  0873               	movf	LcdCommand@i,w
   691     0716  0088               	movwf	8	;volatile
   692     0717                     l593:
   693                           
   694                           ;main.c: 72:     PORTC |= (0x1 << 0);
   695     0717  1407               	bsf	7,0	;volatile
   696     0718                     l595:
   697                           
   698                           ;main.c: 73:     _delay((unsigned long)((100)*(20000000/4000.0)));
   699     0718  3003               	movlw	3
   700     0719  00F2               	movwf	??_LcdCommand+2
   701     071A  308A               	movlw	138
   702     071B  00F1               	movwf	??_LcdCommand+1
   703     071C  3055               	movlw	85
   704     071D  00F0               	movwf	??_LcdCommand
   705     071E                     u107:
   706     071E  0BF0               	decfsz	??_LcdCommand,f
   707     071F  2F1E               	goto	u107
   708     0720  0BF1               	decfsz	??_LcdCommand+1,f
   709     0721  2F1E               	goto	u107
   710     0722  0BF2               	decfsz	??_LcdCommand+2,f
   711     0723  2F1E               	goto	u107
   712     0724  2F25               	nop2
   713                           
   714                           ;main.c: 74:     PORTC &= ~(0x1 << 0);
   715     0725  30FE               	movlw	254
   716     0726  1283               	bcf	3,5	;RP0=0, select bank0
   717     0727  1303               	bcf	3,6	;RP1=0, select bank0
   718     0728  0587               	andwf	7,f	;volatile
   719     0729                     l45:
   720     0729  0008               	return
   721     072A                     __end_of_LcdCommand:
   722                           
   723                           	psect	text3
   724     06F7                     __ptext3:	
   725 ;; *************** function _LcdData *****************
   726 ;; Defined at:
   727 ;;		line 59 in file "main.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;  i               1    wreg     unsigned char 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  i               1    3[COMMON] unsigned char 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   741 ;;      Params:         0       0       0       0       0
   742 ;;      Locals:         1       0       0       0       0
   743 ;;      Temps:          3       0       0       0       0
   744 ;;      Totals:         4       0       0       0       0
   745 ;;Total ram usage:        4 bytes
   746 ;; Hardware stack levels used: 1
   747 ;; This function calls:
   748 ;;		Nothing
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754     06F7                     _LcdData:	
   755                           ;psect for function _LcdData
   756                           
   757                           
   758                           ;incstack = 0
   759                           ; Regs used in _LcdData: [wreg+status,2+status,0]
   760                           ;LcdData@i stored from wreg
   761     06F7  00F3               	movwf	LcdData@i
   762     06F8                     l625:
   763                           
   764                           ;main.c: 59: void LcdData(uint8_t i);main.c: 60: {;main.c: 61:     PORTC |= (0x1 << 3);
   765     06F8  1283               	bcf	3,5	;RP0=0, select bank0
   766     06F9  1303               	bcf	3,6	;RP1=0, select bank0
   767     06FA  1587               	bsf	7,3	;volatile
   768     06FB                     l627:
   769                           
   770                           ;main.c: 62:     PORTD = i;
   771     06FB  0873               	movf	LcdData@i,w
   772     06FC  0088               	movwf	8	;volatile
   773     06FD                     l629:
   774                           
   775                           ;main.c: 63:     PORTC |= (0x1 << 0);
   776     06FD  1407               	bsf	7,0	;volatile
   777                           
   778                           ;main.c: 64:     _delay((unsigned long)((100)*(20000000/4000.0)));
   779     06FE  3003               	movlw	3
   780     06FF  00F2               	movwf	??_LcdData+2
   781     0700  308A               	movlw	138
   782     0701  00F1               	movwf	??_LcdData+1
   783     0702  3055               	movlw	85
   784     0703  00F0               	movwf	??_LcdData
   785     0704                     u117:
   786     0704  0BF0               	decfsz	??_LcdData,f
   787     0705  2F04               	goto	u117
   788     0706  0BF1               	decfsz	??_LcdData+1,f
   789     0707  2F04               	goto	u117
   790     0708  0BF2               	decfsz	??_LcdData+2,f
   791     0709  2F04               	goto	u117
   792     070A  2F0B               	nop2
   793     070B                     l631:
   794                           
   795                           ;main.c: 65:     PORTC &= ~(0x1 << 0);
   796     070B  30FE               	movlw	254
   797     070C  1283               	bcf	3,5	;RP0=0, select bank0
   798     070D  1303               	bcf	3,6	;RP1=0, select bank0
   799     070E  0587               	andwf	7,f	;volatile
   800     070F                     l42:
   801     070F  0008               	return
   802     0710                     __end_of_LcdData:
   803     0002                     ___latbits      equ	2
   804     007E                     btemp           set	126	;btemp
   805     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80      0      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Lcdinit
    _Lcdinit->_LcdCommand

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     165
                                              7 COMMON     2     2      0
                         _LcdCommand
                            _LcdData
                            _Lcdinit
 ---------------------------------------------------------------------------------
 (1) _Lcdinit                                              3     3      0      15
                                              4 COMMON     3     3      0
                         _LcdCommand
 ---------------------------------------------------------------------------------
 (2) _LcdCommand                                           4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _LcdData                                              4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcdCommand
   _LcdData
   _Lcdinit
     _LcdCommand

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0      18     22.5%
BITBANK0            80      0       0      0.0%
COMMON              14      9      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      30      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Mar 10 16:19:46 2025

                      _i 007A                        _m 0079                        _x 007B  
                      pc 0002                       l33 0763                       l42 070F  
                     l45 0729                       l39 07EA                       u10 0749  
                     u11 0748                       u20 0763                       u21 0762  
                     u37 0771                       u47 0784                       u57 0797  
                     u67 07AA                       u77 07BD                       u87 07D0  
                     u97 07E3                       fsr 0004                      l601 0778  
                    l611 07A4                      l603 077E                      l621 07D7  
                    l613 07B1                      l605 078B                      l631 070B  
                    l623 07DD                      l615 07B7                      l607 0791  
                    l625 06F8                      l617 07C4                      l609 079E  
                    l641 0730                      l633 072A                      l627 06FB  
                    l619 07CA                      l643 0737                      l635 072F  
                    l629 06FD                      l661 075D                      l645 0741  
                    l591 0715                      l655 074A                      l647 0743  
                    l593 0717                      l657 0751                      l649 0749  
                    l595 0718                      l659 075B                      l589 0711  
                    l597 0767                      l599 076B                      u107 071E  
                    u117 0704                      fsr0 0004                      indf 0000  
                   _main 072A                     _name 0020                     btemp 007E  
                   start 0000          __end_of_LcdData 0710               _LcdCommand 0710  
        __end_of_Lcdinit 07EB                    ?_main 0070                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
                  main@i 0077                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EB             __end_of_main 0767  
                 ??_main 0077                ??_LcdData 0070                ??_Lcdinit 0074  
            ?_LcdCommand 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 06D2               __pmaintext 072A                  _LcdData 06F7  
                _Lcdinit 0767                  __ptext1 0767                  __ptext2 0710  
                __ptext3 06F7     end_of_initialization 07FC             ??_LcdCommand 0070  
     __end_of_LcdCommand 072A      start_initialization 07EB               init_fetch0 06E4  
            __pdataBANK0 0020              __pbssCOMMON 0079                ___latbits 0002  
               ?_LcdData 0070                 ?_Lcdinit 0070                 LcdData@i 0073  
            LcdCommand@i 0073                 main@i_56 0078                 init_ram0 06E8  
