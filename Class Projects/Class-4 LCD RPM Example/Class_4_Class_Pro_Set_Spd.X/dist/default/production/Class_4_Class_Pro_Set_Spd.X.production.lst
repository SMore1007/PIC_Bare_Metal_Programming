

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Mar 19 21:21:52 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0004                     fsr             equ	4
    57     0004                     fsr0            equ	4
    58     0000                     indf            equ	0
    59     0000                     indf0           equ	0
    60     0002                     pc              equ	2
    61     0002                     pcl             equ	2
    62     000A                     pclath          equ	10
    63     0003                     status          equ	3
    64     0000                     INDF            equ	0	;# 
    65     0001                     TMR0            equ	1	;# 
    66     0002                     PCL             equ	2	;# 
    67     0003                     STATUS          equ	3	;# 
    68     0004                     FSR             equ	4	;# 
    69     0005                     PORTA           equ	5	;# 
    70     0006                     PORTB           equ	6	;# 
    71     0007                     PORTC           equ	7	;# 
    72     0008                     PORTD           equ	8	;# 
    73     0009                     PORTE           equ	9	;# 
    74     000A                     PCLATH          equ	10	;# 
    75     000B                     INTCON          equ	11	;# 
    76     000C                     PIR1            equ	12	;# 
    77     000D                     PIR2            equ	13	;# 
    78     000E                     TMR1            equ	14	;# 
    79     000E                     TMR1L           equ	14	;# 
    80     000F                     TMR1H           equ	15	;# 
    81     0010                     T1CON           equ	16	;# 
    82     0011                     TMR2            equ	17	;# 
    83     0012                     T2CON           equ	18	;# 
    84     0013                     SSPBUF          equ	19	;# 
    85     0014                     SSPCON          equ	20	;# 
    86     0015                     CCPR1           equ	21	;# 
    87     0015                     CCPR1L          equ	21	;# 
    88     0016                     CCPR1H          equ	22	;# 
    89     0017                     CCP1CON         equ	23	;# 
    90     0018                     RCSTA           equ	24	;# 
    91     0019                     TXREG           equ	25	;# 
    92     001A                     RCREG           equ	26	;# 
    93     001B                     CCPR2           equ	27	;# 
    94     001B                     CCPR2L          equ	27	;# 
    95     001C                     CCPR2H          equ	28	;# 
    96     001D                     CCP2CON         equ	29	;# 
    97     001E                     ADRESH          equ	30	;# 
    98     001F                     ADCON0          equ	31	;# 
    99     0081                     OPTION_REG      equ	129	;# 
   100     0085                     TRISA           equ	133	;# 
   101     0086                     TRISB           equ	134	;# 
   102     0087                     TRISC           equ	135	;# 
   103     0088                     TRISD           equ	136	;# 
   104     0089                     TRISE           equ	137	;# 
   105     008C                     PIE1            equ	140	;# 
   106     008D                     PIE2            equ	141	;# 
   107     008E                     PCON            equ	142	;# 
   108     0091                     SSPCON2         equ	145	;# 
   109     0092                     PR2             equ	146	;# 
   110     0093                     SSPADD          equ	147	;# 
   111     0094                     SSPSTAT         equ	148	;# 
   112     0098                     TXSTA           equ	152	;# 
   113     0099                     SPBRG           equ	153	;# 
   114     009C                     CMCON           equ	156	;# 
   115     009D                     CVRCON          equ	157	;# 
   116     009E                     ADRESL          equ	158	;# 
   117     009F                     ADCON1          equ	159	;# 
   118     010C                     EEDATA          equ	268	;# 
   119     010D                     EEADR           equ	269	;# 
   120     010E                     EEDATH          equ	270	;# 
   121     010F                     EEADRH          equ	271	;# 
   122     018C                     EECON1          equ	396	;# 
   123     018D                     EECON2          equ	397	;# 
   124     0000                     INDF            equ	0	;# 
   125     0001                     TMR0            equ	1	;# 
   126     0002                     PCL             equ	2	;# 
   127     0003                     STATUS          equ	3	;# 
   128     0004                     FSR             equ	4	;# 
   129     0005                     PORTA           equ	5	;# 
   130     0006                     PORTB           equ	6	;# 
   131     0007                     PORTC           equ	7	;# 
   132     0008                     PORTD           equ	8	;# 
   133     0009                     PORTE           equ	9	;# 
   134     000A                     PCLATH          equ	10	;# 
   135     000B                     INTCON          equ	11	;# 
   136     000C                     PIR1            equ	12	;# 
   137     000D                     PIR2            equ	13	;# 
   138     000E                     TMR1            equ	14	;# 
   139     000E                     TMR1L           equ	14	;# 
   140     000F                     TMR1H           equ	15	;# 
   141     0010                     T1CON           equ	16	;# 
   142     0011                     TMR2            equ	17	;# 
   143     0012                     T2CON           equ	18	;# 
   144     0013                     SSPBUF          equ	19	;# 
   145     0014                     SSPCON          equ	20	;# 
   146     0015                     CCPR1           equ	21	;# 
   147     0015                     CCPR1L          equ	21	;# 
   148     0016                     CCPR1H          equ	22	;# 
   149     0017                     CCP1CON         equ	23	;# 
   150     0018                     RCSTA           equ	24	;# 
   151     0019                     TXREG           equ	25	;# 
   152     001A                     RCREG           equ	26	;# 
   153     001B                     CCPR2           equ	27	;# 
   154     001B                     CCPR2L          equ	27	;# 
   155     001C                     CCPR2H          equ	28	;# 
   156     001D                     CCP2CON         equ	29	;# 
   157     001E                     ADRESH          equ	30	;# 
   158     001F                     ADCON0          equ	31	;# 
   159     0081                     OPTION_REG      equ	129	;# 
   160     0085                     TRISA           equ	133	;# 
   161     0086                     TRISB           equ	134	;# 
   162     0087                     TRISC           equ	135	;# 
   163     0088                     TRISD           equ	136	;# 
   164     0089                     TRISE           equ	137	;# 
   165     008C                     PIE1            equ	140	;# 
   166     008D                     PIE2            equ	141	;# 
   167     008E                     PCON            equ	142	;# 
   168     0091                     SSPCON2         equ	145	;# 
   169     0092                     PR2             equ	146	;# 
   170     0093                     SSPADD          equ	147	;# 
   171     0094                     SSPSTAT         equ	148	;# 
   172     0098                     TXSTA           equ	152	;# 
   173     0099                     SPBRG           equ	153	;# 
   174     009C                     CMCON           equ	156	;# 
   175     009D                     CVRCON          equ	157	;# 
   176     009E                     ADRESL          equ	158	;# 
   177     009F                     ADCON1          equ	159	;# 
   178     010C                     EEDATA          equ	268	;# 
   179     010D                     EEADR           equ	269	;# 
   180     010E                     EEDATH          equ	270	;# 
   181     010F                     EEADRH          equ	271	;# 
   182     018C                     EECON1          equ	396	;# 
   183     018D                     EECON2          equ	397	;# 
   184                           
   185                           	psect	idataBANK0
   186     0529                     __pidataBANK0:
   187                           
   188                           ;initializer for _Array
   189     0529  3453               	retlw	83
   190     052A  3445               	retlw	69
   191     052B  3454               	retlw	84
   192     052C  3420               	retlw	32
   193     052D  3453               	retlw	83
   194     052E  3450               	retlw	80
   195     052F  3444               	retlw	68
   196     0530  343A               	retlw	58
   197     0531  3420               	retlw	32
   198     0532  3420               	retlw	32
   199     0533  3420               	retlw	32
   200     0534  3420               	retlw	32
   201     0535  3472               	retlw	114
   202     0536  3470               	retlw	112
   203     0537  346D               	retlw	109
   204     0008                     _PORTD          set	8
   205     0007                     _PORTC          set	7
   206     0006                     _PORTB          set	6
   207     0081                     _OPTION_REG     set	129
   208     0086                     _TRISB          set	134
   209     0088                     _TRISD          set	136
   210     0087                     _TRISC          set	135
   211                           
   212                           	psect	cinit
   213     07E8                     start_initialization:	
   214                           ; #config settings
   215                           
   216     07E8                     __initialization:
   217                           
   218                           ; Initialize objects allocated to BANK0
   219     07E8  1383               	bcf	3,7	;select IRP bank0
   220     07E9  302F               	movlw	low (__pdataBANK0+15)
   221     07EA  00FD               	movwf	btemp+-1
   222     07EB  3005               	movlw	high __pidataBANK0
   223     07EC  00FE               	movwf	btemp
   224     07ED  3029               	movlw	low __pidataBANK0
   225     07EE  00FF               	movwf	btemp+1
   226     07EF  3020               	movlw	low __pdataBANK0
   227     07F0  0084               	movwf	4
   228     07F1  120A  118A  253C  120A  118A  	fcall	init_ram0
   229                           
   230                           ; Clear objects allocated to BANK0
   231     07F6  01BA               	clrf	__pbssBANK0& (0+127)
   232     07F7  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   233     07F8  01BC               	clrf	(__pbssBANK0+2)& (0+127)
   234     07F9  01BD               	clrf	(__pbssBANK0+3)& (0+127)
   235     07FA  01BE               	clrf	(__pbssBANK0+4)& (0+127)
   236     07FB  01BF               	clrf	(__pbssBANK0+5)& (0+127)
   237     07FC                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240     07FC                     __end_of__initialization:
   241     07FC  0183               	clrf	3
   242     07FD  120A  118A  2D7E   	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	bssBANK0
   245     003A                     __pbssBANK0:
   246     003A                     _j:
   247     003A                     	ds	2
   248     003C                     _value:
   249     003C                     	ds	1
   250     003D                     _n:
   251     003D                     	ds	1
   252     003E                     _m:
   253     003E                     	ds	1
   254     003F                     _x:
   255     003F                     	ds	1
   256                           
   257                           	psect	dataBANK0
   258     0020                     __pdataBANK0:
   259     0020                     _Array:
   260     0020                     	ds	15
   261                           
   262                           	psect	inittext
   263     0538                     init_fetch0:	
   264                           ;	Called with low address in FSR and high address in W
   265                           
   266     0538  087E               	movf	btemp,w
   267     0539  008A               	movwf	10
   268     053A  087F               	movf	btemp+1,w
   269     053B  0082               	movwf	2
   270     053C                     init_ram0:	
   271                           ;Called with:
   272                           ;	high address of idata address in btemp 
   273                           ;	low address of idata address in btemp+1 
   274                           ;	low address of data in FSR
   275                           ;	high address + 1 of data in btemp-1
   276                           
   277     053C  120A  118A  2538  120A  118A  	fcall	init_fetch0
   278     0541  0080               	movwf	0
   279     0542  0A84               	incf	4,f
   280     0543  0804               	movf	4,w
   281     0544  067D               	xorwf	btemp+-1,w
   282     0545  1903               	btfsc	3,2
   283     0546  3400               	retlw	0
   284     0547  0AFF               	incf	btemp+1,f
   285     0548  1903               	btfsc	3,2
   286     0549  0AFE               	incf	btemp,f
   287     054A  2D3C               	goto	init_ram0
   288                           
   289                           	psect	cstackCOMMON
   290     0070                     __pcstackCOMMON:
   291     0070                     ?_Lcdinit:
   292     0070                     ?_keyScan:	
   293                           ; 1 bytes @ 0x0
   294                           
   295     0070                     ?_LcdCommand:	
   296                           ; 1 bytes @ 0x0
   297                           
   298     0070                     ?_LcdData:	
   299                           ; 1 bytes @ 0x0
   300                           
   301     0070                     ?_main:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     ?___lwmod:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     ___lwmod@divisor:	
   308                           ; 2 bytes @ 0x0
   309                           
   310     0070                     ??_LcdCommand:	
   311                           ; 2 bytes @ 0x0
   312                           
   313     0070                     ??_LcdData:	
   314                           ; 1 bytes @ 0x0
   315                           
   316                           
   317                           ; 1 bytes @ 0x0
   318     0070                     	ds	2
   319     0072                     ___lwmod@dividend:
   320                           
   321                           ; 2 bytes @ 0x2
   322     0072                     	ds	1
   323     0073                     LcdData@i:
   324     0073                     LcdCommand@i:	
   325                           ; 1 bytes @ 0x3
   326                           
   327                           
   328                           ; 1 bytes @ 0x3
   329     0073                     	ds	1
   330     0074                     ___lwmod@counter:
   331     0074                     ??_Lcdinit:	
   332                           ; 1 bytes @ 0x4
   333                           
   334     0074                     ??___lwmod:	
   335                           ; 1 bytes @ 0x4
   336                           
   337                           
   338                           ; 1 bytes @ 0x4
   339     0074                     	ds	1
   340     0075                     ?___lwdiv:
   341     0075                     ___lwdiv@divisor:	
   342                           ; 2 bytes @ 0x5
   343                           
   344                           
   345                           ; 2 bytes @ 0x5
   346     0075                     	ds	2
   347     0077                     ___lwdiv@dividend:
   348                           
   349                           ; 2 bytes @ 0x7
   350     0077                     	ds	2
   351     0079                     ___lwdiv@quotient:
   352     0079                     ??___lwdiv:	
   353                           ; 2 bytes @ 0x9
   354                           
   355                           
   356                           ; 1 bytes @ 0x9
   357     0079                     	ds	2
   358     007B                     ___lwdiv@counter:
   359                           
   360                           ; 1 bytes @ 0xB
   361     007B                     	ds	1
   362     007C                     ?_LcdOutput:
   363     007C                     LcdOutput@i:	
   364                           ; 1 bytes @ 0xC
   365                           
   366                           
   367                           ; 2 bytes @ 0xC
   368     007C                     	ds	2
   369     007E                     ??_keyScan:
   370     007E                     ??_LcdOutput:	
   371                           ; 1 bytes @ 0xE
   372                           
   373                           
   374                           	psect	cstackBANK0
   375     002F                     __pcstackBANK0:	
   376                           ; 1 bytes @ 0xE
   377                           
   378     002F                     LcdOutput@d1:
   379                           
   380                           ; 1 bytes @ 0x0
   381     002F                     	ds	1
   382     0030                     LcdOutput@d2:
   383                           
   384                           ; 1 bytes @ 0x1
   385     0030                     	ds	1
   386     0031                     LcdOutput@d3:
   387                           
   388                           ; 1 bytes @ 0x2
   389     0031                     	ds	1
   390     0032                     LcdOutput@d4:
   391                           
   392                           ; 1 bytes @ 0x3
   393     0032                     	ds	1
   394     0033                     keyScan@i:
   395                           
   396                           ; 2 bytes @ 0x4
   397     0033                     	ds	2
   398     0035                     keyScan@i_72:
   399                           
   400                           ; 2 bytes @ 0x6
   401     0035                     	ds	2
   402     0037                     ??_main:
   403                           
   404                           ; 1 bytes @ 0x8
   405     0037                     	ds	3
   406                           
   407                           	psect	maintext
   408     057E                     __pmaintext:	
   409 ;;
   410 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   411 ;;
   412 ;; *************** function _main *****************
   413 ;; Defined at:
   414 ;;		line 34 in file "main.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : B00/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   428 ;;      Params:         0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0
   430 ;;      Temps:          0       3       0       0       0
   431 ;;      Totals:         0       3       0       0       0
   432 ;;Total ram usage:        3 bytes
   433 ;; Hardware stack levels required when called: 3
   434 ;; This function calls:
   435 ;;		_Lcdinit
   436 ;;		_keyScan
   437 ;; This function is called by:
   438 ;;		Startup code after reset
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442     057E                     _main:	
   443                           ;psect for function _main
   444                           
   445     057E                     l932:	
   446                           ;incstack = 0
   447                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   448                           
   449                           
   450                           ;main.c: 35:     LcdCommand(0x30);
   451     057E  120A  118A  269D  120A  118A  	fcall	_Lcdinit
   452     0583                     l934:
   453                           
   454                           ;main.c: 38:     _delay((unsigned long)((100)*(20000000/4000.0)));;main.c: 39:     LcdCo
      +                          mmand(0x38);
   455     0583  120A  118A  2738  120A  118A  	fcall	_keyScan
   456     0588                     l936:
   457                           
   458                           ;main.c: 40:     _delay((unsigned long)((100)*(20000000/4000.0)));
   459     0588  3003               	movlw	3
   460     0589  1283               	bcf	3,5	;RP0=0, select bank0
   461     058A  1303               	bcf	3,6	;RP1=0, select bank0
   462     058B  00B9               	movwf	??_main+2
   463     058C  308A               	movlw	138
   464     058D  00B8               	movwf	??_main+1
   465     058E  3055               	movlw	85
   466     058F  00B7               	movwf	??_main
   467     0590                     u357:
   468     0590  0BB7               	decfsz	??_main,f
   469     0591  2D90               	goto	u357
   470     0592  0BB8               	decfsz	??_main+1,f
   471     0593  2D90               	goto	u357
   472     0594  0BB9               	decfsz	??_main+2,f
   473     0595  2D90               	goto	u357
   474     0596  2D83               	goto	l934
   475     0597  120A  118A  2800   	ljmp	start
   476     059A                     __end_of_main:
   477                           
   478                           	psect	text1
   479     0738                     __ptext1:	
   480 ;; *************** function _keyScan *****************
   481 ;; Defined at:
   482 ;;		line 71 in file "main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;  i               2    6[BANK0 ] int 
   487 ;;  i               2    4[BANK0 ] int 
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   497 ;;      Params:         0       0       0       0       0
   498 ;;      Locals:         0       4       0       0       0
   499 ;;      Temps:          0       0       0       0       0
   500 ;;      Totals:         0       4       0       0       0
   501 ;;Total ram usage:        4 bytes
   502 ;; Hardware stack levels used: 1
   503 ;; Hardware stack levels required when called: 2
   504 ;; This function calls:
   505 ;;		_LcdCommand
   506 ;;		_LcdData
   507 ;;		_LcdOutput
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513     0738                     _keyScan:	
   514                           ;psect for function _keyScan
   515                           
   516     0738                     l880:	
   517                           ;incstack = 0
   518                           ; Regs used in _keyScan: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   519                           
   520                           
   521                           ;main.c: 73: 
   522     0738  1283               	bcf	3,5	;RP0=0, select bank0
   523     0739  1303               	bcf	3,6	;RP1=0, select bank0
   524     073A  0806               	movf	6,w	;volatile
   525     073B  00BC               	movwf	_value
   526     073C                     l882:
   527     073C  30F0               	movlw	240
   528     073D  05BC               	andwf	_value,f
   529                           
   530                           ;main.c: 75:             LcdOutput(j);
   531     073E  2FD9               	goto	l930
   532     073F                     l884:
   533                           
   534                           ;main.c: 78:         case 0xB0:
   535     073F  3080               	movlw	128
   536     0740  120A  118A  2564  120A  118A  	fcall	_LcdCommand
   537     0745                     l886:
   538                           
   539                           ;main.c: 80:                 j--;
   540     0745  1283               	bcf	3,5	;RP0=0, select bank0
   541     0746  1303               	bcf	3,6	;RP1=0, select bank0
   542     0747  01B3               	clrf	keyScan@i
   543     0748  01B4               	clrf	keyScan@i+1
   544     0749                     l892:
   545                           
   546                           ;main.c: 81: ;main.c: 82:             LcdCommand(0x88);
   547     0749  1283               	bcf	3,5	;RP0=0, select bank0
   548     074A  1303               	bcf	3,6	;RP1=0, select bank0
   549     074B  0833               	movf	keyScan@i,w
   550     074C  3E20               	addlw	(low (_Array| 0))& (0+255)
   551     074D  0084               	movwf	4
   552     074E  1383               	bcf	3,7	;select IRP bank0
   553     074F  0800               	movf	0,w
   554     0750  120A  118A  254B  120A  118A  	fcall	_LcdData
   555     0755                     l894:
   556                           
   557                           ;main.c: 83:             LcdOutput(j);
   558     0755  3001               	movlw	1
   559     0756  1283               	bcf	3,5	;RP0=0, select bank0
   560     0757  1303               	bcf	3,6	;RP1=0, select bank0
   561     0758  07B3               	addwf	keyScan@i,f
   562     0759  1803               	skipnc
   563     075A  0AB4               	incf	keyScan@i+1,f
   564     075B  3000               	movlw	0
   565     075C  07B4               	addwf	keyScan@i+1,f
   566     075D                     l896:
   567     075D  0834               	movf	keyScan@i+1,w
   568     075E  3A80               	xorlw	128
   569     075F  00FF               	movwf	btemp+1
   570     0760  3080               	movlw	128
   571     0761  027F               	subwf	btemp+1,w
   572     0762  1D03               	skipz
   573     0763  2F66               	goto	u315
   574     0764  300F               	movlw	15
   575     0765  0233               	subwf	keyScan@i,w
   576     0766                     u315:
   577     0766  1C03               	skipc
   578     0767  2F69               	goto	u311
   579     0768  2F6A               	goto	u310
   580     0769                     u311:
   581     0769  2F49               	goto	l892
   582     076A                     u310:
   583     076A                     l898:
   584                           
   585                           ;main.c: 85: 
   586     076A  1283               	bcf	3,5	;RP0=0, select bank0
   587     076B  1303               	bcf	3,6	;RP1=0, select bank0
   588     076C  01B5               	clrf	keyScan@i_72
   589     076D  01B6               	clrf	keyScan@i_72+1
   590     076E                     l904:
   591                           
   592                           ;main.c: 86:         case 0x70:;main.c: 87:             LcdCommand(0x88);
   593     076E  1283               	bcf	3,5	;RP0=0, select bank0
   594     076F  1303               	bcf	3,6	;RP1=0, select bank0
   595     0770  0835               	movf	keyScan@i_72,w
   596     0771  3E88               	addlw	136
   597     0772  120A  118A  2564  120A  118A  	fcall	_LcdCommand
   598                           
   599                           ;main.c: 88:             LcdOutput(0);
   600     0777  3030               	movlw	48
   601     0778  120A  118A  254B  120A  118A  	fcall	_LcdData
   602     077D                     l906:
   603                           
   604                           ;main.c: 89:             break;
   605     077D  3001               	movlw	1
   606     077E  1283               	bcf	3,5	;RP0=0, select bank0
   607     077F  1303               	bcf	3,6	;RP1=0, select bank0
   608     0780  07B5               	addwf	keyScan@i_72,f
   609     0781  1803               	skipnc
   610     0782  0AB6               	incf	keyScan@i_72+1,f
   611     0783  3000               	movlw	0
   612     0784  07B6               	addwf	keyScan@i_72+1,f
   613     0785                     l908:
   614     0785  0836               	movf	keyScan@i_72+1,w
   615     0786  3A80               	xorlw	128
   616     0787  00FF               	movwf	btemp+1
   617     0788  3080               	movlw	128
   618     0789  027F               	subwf	btemp+1,w
   619     078A  1D03               	skipz
   620     078B  2F8E               	goto	u325
   621     078C  3004               	movlw	4
   622     078D  0235               	subwf	keyScan@i_72,w
   623     078E                     u325:
   624     078E  1C03               	skipc
   625     078F  2F91               	goto	u321
   626     0790  2F92               	goto	u320
   627     0791                     u321:
   628     0791  2F6E               	goto	l904
   629     0792                     u320:
   630     0792  2FE7               	goto	l65
   631     0793                     l910:
   632                           
   633                           ;main.c: 93:             break;
   634     0793  3013               	movlw	19
   635     0794  023B               	subwf	_j+1,w
   636     0795  3088               	movlw	136
   637     0796  1903               	skipnz
   638     0797  023A               	subwf	_j,w
   639     0798  1803               	skipnc
   640     0799  2F9B               	goto	u331
   641     079A  2F9C               	goto	u330
   642     079B                     u331:
   643     079B  2FA2               	goto	l914
   644     079C                     u330:
   645     079C                     l912:
   646                           
   647                           ;main.c: 94:     }
   648     079C  3001               	movlw	1
   649     079D  07BA               	addwf	_j,f
   650     079E  1803               	skipnc
   651     079F  0ABB               	incf	_j+1,f
   652     07A0  3000               	movlw	0
   653     07A1  07BB               	addwf	_j+1,f
   654     07A2                     l914:
   655                           
   656                           ;main.c: 96: 
   657     07A2  3088               	movlw	136
   658     07A3  120A  118A  2564  120A  118A  	fcall	_LcdCommand
   659     07A8                     l916:
   660                           
   661                           ;main.c: 97: 
   662     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   663     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   664     07AA  083B               	movf	_j+1,w
   665     07AB  00FD               	movwf	LcdOutput@i+1
   666     07AC  083A               	movf	_j,w
   667     07AD  00FC               	movwf	LcdOutput@i
   668     07AE  120A  118A  2614  120A  118A  	fcall	_LcdOutput
   669                           
   670                           ;main.c: 98: 
   671     07B3  2FE7               	goto	l65
   672     07B4                     l918:
   673                           
   674                           ;main.c: 101:     uint8_t d1, d2, d3, d4;
   675     07B4  3000               	movlw	0
   676     07B5  023B               	subwf	_j+1,w
   677     07B6  3002               	movlw	2
   678     07B7  1903               	skipnz
   679     07B8  023A               	subwf	_j,w
   680     07B9  1C03               	skipc
   681     07BA  2FBC               	goto	u341
   682     07BB  2FBD               	goto	u340
   683     07BC                     u341:
   684     07BC  2FC3               	goto	l922
   685     07BD                     u340:
   686     07BD                     l920:
   687                           
   688                           ;main.c: 102:     d4 = (uint8_t)(i / 1000);
   689     07BD  3001               	movlw	1
   690     07BE  02BA               	subwf	_j,f
   691     07BF  3000               	movlw	0
   692     07C0  1C03               	skipc
   693     07C1  03BB               	decf	_j+1,f
   694     07C2  02BB               	subwf	_j+1,f
   695     07C3                     l922:
   696                           
   697                           ;main.c: 104:     d2 = (uint8_t)((i % 100) / 10);
   698     07C3  3088               	movlw	136
   699     07C4  120A  118A  2564  120A  118A  	fcall	_LcdCommand
   700     07C9  2FA8               	goto	l916
   701     07CA                     l926:
   702                           
   703                           ;main.c: 109: 
   704     07CA  3088               	movlw	136
   705     07CB  120A  118A  2564  120A  118A  	fcall	_LcdCommand
   706                           
   707                           ;main.c: 110:     LcdData(0x30 + d3);
   708     07D0  3000               	movlw	0
   709     07D1  00FC               	movwf	LcdOutput@i
   710     07D2  00FD               	movwf	LcdOutput@i+1
   711     07D3  120A  118A  2614  120A  118A  	fcall	_LcdOutput
   712                           
   713                           ;main.c: 111: 
   714     07D8  2FE7               	goto	l65
   715     07D9                     l930:
   716     07D9  083C               	movf	_value,w
   717                           
   718                           ; Switch size 1, requested type "simple"
   719                           ; Number of cases is 4, Range of values is 112 to 224
   720                           ; switch strategies available:
   721                           ; Name         Instructions Cycles
   722                           ; simple_byte           13     7 (average)
   723                           ; jumptable            263     9 (fixed)
   724                           ;	Chosen strategy is simple_byte
   725     07DA  3A70               	xorlw	112	; case 112
   726     07DB  1903               	skipnz
   727     07DC  2FCA               	goto	l926
   728     07DD  3AC0               	xorlw	192	; case 176
   729     07DE  1903               	skipnz
   730     07DF  2FB4               	goto	l918
   731     07E0  3A60               	xorlw	96	; case 208
   732     07E1  1903               	skipnz
   733     07E2  2F93               	goto	l910
   734     07E3  3A30               	xorlw	48	; case 224
   735     07E4  1903               	skipnz
   736     07E5  2F3F               	goto	l884
   737     07E6  2FE7               	goto	l65
   738     07E7                     l65:
   739     07E7  0008               	return
   740     07E8                     __end_of_keyScan:
   741                           
   742                           	psect	text2
   743     0614                     __ptext2:	
   744 ;; *************** function _LcdOutput *****************
   745 ;; Defined at:
   746 ;;		line 121 in file "main.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  i               2   12[COMMON] unsigned short 
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  d4              1    3[BANK0 ] unsigned char 
   751 ;;  d3              1    2[BANK0 ] unsigned char 
   752 ;;  d2              1    1[BANK0 ] unsigned char 
   753 ;;  d1              1    0[BANK0 ] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         2       0       0       0       0
   764 ;;      Locals:         0       4       0       0       0
   765 ;;      Temps:          0       0       0       0       0
   766 ;;      Totals:         2       4       0       0       0
   767 ;;Total ram usage:        6 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 1
   770 ;; This function calls:
   771 ;;		_LcdCommand
   772 ;;		_LcdData
   773 ;;		___lwdiv
   774 ;;		___lwmod
   775 ;; This function is called by:
   776 ;;		_keyScan
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780     0614                     _LcdOutput:	
   781                           ;psect for function _LcdOutput
   782                           
   783     0614                     l842:	
   784                           ;incstack = 0
   785                           ; Regs used in _LcdOutput: [wreg+status,2+status,0+pclath+cstack]
   786                           
   787                           
   788                           ;main.c: 121:     PORTD = i;;main.c: 122:     PORTC |= (0x1 << 0);;main.c: 123:     _del
      +                          ay((unsigned long)((100)*(20000000/4000.0)));;main.c: 124:     PORTC &= ~(0x1 << 0);
   789     0614  30E8               	movlw	232
   790     0615  00F5               	movwf	___lwdiv@divisor
   791     0616  3003               	movlw	3
   792     0617  00F6               	movwf	___lwdiv@divisor+1
   793     0618  087D               	movf	LcdOutput@i+1,w
   794     0619  00F8               	movwf	___lwdiv@dividend+1
   795     061A  087C               	movf	LcdOutput@i,w
   796     061B  00F7               	movwf	___lwdiv@dividend
   797     061C  120A  118A  25D2  120A  118A  	fcall	___lwdiv
   798     0621  0875               	movf	?___lwdiv,w
   799     0622  1283               	bcf	3,5	;RP0=0, select bank0
   800     0623  1303               	bcf	3,6	;RP1=0, select bank0
   801     0624  00B2               	movwf	LcdOutput@d4
   802                           
   803                           ;main.c: 125: }
   804     0625  3064               	movlw	100
   805     0626  00F5               	movwf	___lwdiv@divisor
   806     0627  3000               	movlw	0
   807     0628  00F6               	movwf	___lwdiv@divisor+1
   808     0629  087D               	movf	LcdOutput@i+1,w
   809     062A  00F3               	movwf	___lwmod@dividend+1
   810     062B  087C               	movf	LcdOutput@i,w
   811     062C  00F2               	movwf	___lwmod@dividend
   812     062D  30E8               	movlw	232
   813     062E  00F0               	movwf	___lwmod@divisor
   814     062F  3003               	movlw	3
   815     0630  00F1               	movwf	___lwmod@divisor+1
   816     0631  120A  118A  259A  120A  118A  	fcall	___lwmod
   817     0636  0871               	movf	?___lwmod+1,w
   818     0637  00F8               	movwf	___lwdiv@dividend+1
   819     0638  0870               	movf	?___lwmod,w
   820     0639  00F7               	movwf	___lwdiv@dividend
   821     063A  120A  118A  25D2  120A  118A  	fcall	___lwdiv
   822     063F  0875               	movf	?___lwdiv,w
   823     0640  1283               	bcf	3,5	;RP0=0, select bank0
   824     0641  1303               	bcf	3,6	;RP1=0, select bank0
   825     0642  00B1               	movwf	LcdOutput@d3
   826                           
   827                           ;main.c: 126: 
   828     0643  300A               	movlw	10
   829     0644  00F5               	movwf	___lwdiv@divisor
   830     0645  3000               	movlw	0
   831     0646  00F6               	movwf	___lwdiv@divisor+1
   832     0647  087D               	movf	LcdOutput@i+1,w
   833     0648  00F3               	movwf	___lwmod@dividend+1
   834     0649  087C               	movf	LcdOutput@i,w
   835     064A  00F2               	movwf	___lwmod@dividend
   836     064B  3064               	movlw	100
   837     064C  00F0               	movwf	___lwmod@divisor
   838     064D  3000               	movlw	0
   839     064E  00F1               	movwf	___lwmod@divisor+1
   840     064F  120A  118A  259A  120A  118A  	fcall	___lwmod
   841     0654  0871               	movf	?___lwmod+1,w
   842     0655  00F8               	movwf	___lwdiv@dividend+1
   843     0656  0870               	movf	?___lwmod,w
   844     0657  00F7               	movwf	___lwdiv@dividend
   845     0658  120A  118A  25D2  120A  118A  	fcall	___lwdiv
   846     065D  0875               	movf	?___lwdiv,w
   847     065E  1283               	bcf	3,5	;RP0=0, select bank0
   848     065F  1303               	bcf	3,6	;RP1=0, select bank0
   849     0660  00B0               	movwf	LcdOutput@d2
   850                           
   851                           ;main.c: 127: 
   852     0661  300A               	movlw	10
   853     0662  00F0               	movwf	___lwmod@divisor
   854     0663  3000               	movlw	0
   855     0664  00F1               	movwf	___lwmod@divisor+1
   856     0665  087D               	movf	LcdOutput@i+1,w
   857     0666  00F3               	movwf	___lwmod@dividend+1
   858     0667  087C               	movf	LcdOutput@i,w
   859     0668  00F2               	movwf	___lwmod@dividend
   860     0669  120A  118A  259A  120A  118A  	fcall	___lwmod
   861     066E  0870               	movf	?___lwmod,w
   862     066F  1283               	bcf	3,5	;RP0=0, select bank0
   863     0670  1303               	bcf	3,6	;RP1=0, select bank0
   864     0671  00AF               	movwf	LcdOutput@d1
   865                           
   866                           ;main.c: 129: {
   867     0672  3088               	movlw	136
   868     0673  120A  118A  2564  120A  118A  	fcall	_LcdCommand
   869                           
   870                           ;main.c: 130:     PORTC &= ~(0x1 << 3);
   871     0678  1283               	bcf	3,5	;RP0=0, select bank0
   872     0679  1303               	bcf	3,6	;RP1=0, select bank0
   873     067A  0832               	movf	LcdOutput@d4,w
   874     067B  3E30               	addlw	48
   875     067C  120A  118A  254B  120A  118A  	fcall	_LcdData
   876                           
   877                           ;main.c: 132:     PORTC |= (0x1 << 0);
   878     0681  1283               	bcf	3,5	;RP0=0, select bank0
   879     0682  1303               	bcf	3,6	;RP1=0, select bank0
   880     0683  0831               	movf	LcdOutput@d3,w
   881     0684  3E30               	addlw	48
   882     0685  120A  118A  254B  120A  118A  	fcall	_LcdData
   883                           
   884                           ;main.c: 134:     PORTC &= ~(0x1 << 0);
   885     068A  1283               	bcf	3,5	;RP0=0, select bank0
   886     068B  1303               	bcf	3,6	;RP1=0, select bank0
   887     068C  0830               	movf	LcdOutput@d2,w
   888     068D  3E30               	addlw	48
   889     068E  120A  118A  254B  120A  118A  	fcall	_LcdData
   890     0693  1283               	bcf	3,5	;RP0=0, select bank0
   891     0694  1303               	bcf	3,6	;RP1=0, select bank0
   892     0695  082F               	movf	LcdOutput@d1,w
   893     0696  3E30               	addlw	48
   894     0697  120A  118A  254B  120A  118A  	fcall	_LcdData
   895     069C                     l68:
   896     069C  0008               	return
   897     069D                     __end_of_LcdOutput:
   898                           
   899                           	psect	text3
   900     059A                     __ptext3:	
   901 ;; *************** function ___lwmod *****************
   902 ;; Defined at:
   903 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  divisor         2    0[COMMON] unsigned int 
   906 ;;  dividend        2    2[COMMON] unsigned int 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  counter         1    4[COMMON] unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  2    0[COMMON] unsigned int 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   918 ;;      Params:         4       0       0       0       0
   919 ;;      Locals:         1       0       0       0       0
   920 ;;      Temps:          0       0       0       0       0
   921 ;;      Totals:         5       0       0       0       0
   922 ;;Total ram usage:        5 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_LcdOutput
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931     059A                     ___lwmod:	
   932                           ;psect for function ___lwmod
   933                           
   934     059A                     l820:	
   935                           ;incstack = 0
   936                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   937                           
   938     059A  0870               	movf	___lwmod@divisor,w
   939     059B  0471               	iorwf	___lwmod@divisor+1,w
   940     059C  1903               	btfsc	3,2
   941     059D  2D9F               	goto	u251
   942     059E  2DA0               	goto	u250
   943     059F                     u251:
   944     059F  2DCD               	goto	l838
   945     05A0                     u250:
   946     05A0                     l822:
   947     05A0  3001               	movlw	1
   948     05A1  00F4               	movwf	___lwmod@counter
   949     05A2  2DAC               	goto	l828
   950     05A3                     l824:
   951     05A3  3001               	movlw	1
   952     05A4                     u265:
   953     05A4  1003               	clrc
   954     05A5  0DF0               	rlf	___lwmod@divisor,f
   955     05A6  0DF1               	rlf	___lwmod@divisor+1,f
   956     05A7  3EFF               	addlw	-1
   957     05A8  1D03               	skipz
   958     05A9  2DA4               	goto	u265
   959     05AA                     l826:
   960     05AA  3001               	movlw	1
   961     05AB  07F4               	addwf	___lwmod@counter,f
   962     05AC                     l828:
   963     05AC  1FF1               	btfss	___lwmod@divisor+1,7
   964     05AD  2DAF               	goto	u271
   965     05AE  2DB0               	goto	u270
   966     05AF                     u271:
   967     05AF  2DA3               	goto	l824
   968     05B0                     u270:
   969     05B0                     l830:
   970     05B0  0871               	movf	___lwmod@divisor+1,w
   971     05B1  0273               	subwf	___lwmod@dividend+1,w
   972     05B2  1D03               	skipz
   973     05B3  2DB6               	goto	u285
   974     05B4  0870               	movf	___lwmod@divisor,w
   975     05B5  0272               	subwf	___lwmod@dividend,w
   976     05B6                     u285:
   977     05B6  1C03               	skipc
   978     05B7  2DB9               	goto	u281
   979     05B8  2DBA               	goto	u280
   980     05B9                     u281:
   981     05B9  2DC0               	goto	l834
   982     05BA                     u280:
   983     05BA                     l832:
   984     05BA  0870               	movf	___lwmod@divisor,w
   985     05BB  02F2               	subwf	___lwmod@dividend,f
   986     05BC  0871               	movf	___lwmod@divisor+1,w
   987     05BD  1C03               	skipc
   988     05BE  03F3               	decf	___lwmod@dividend+1,f
   989     05BF  02F3               	subwf	___lwmod@dividend+1,f
   990     05C0                     l834:
   991     05C0  3001               	movlw	1
   992     05C1                     u295:
   993     05C1  1003               	clrc
   994     05C2  0CF1               	rrf	___lwmod@divisor+1,f
   995     05C3  0CF0               	rrf	___lwmod@divisor,f
   996     05C4  3EFF               	addlw	-1
   997     05C5  1D03               	skipz
   998     05C6  2DC1               	goto	u295
   999     05C7                     l836:
  1000     05C7  3001               	movlw	1
  1001     05C8  02F4               	subwf	___lwmod@counter,f
  1002     05C9  1D03               	btfss	3,2
  1003     05CA  2DCC               	goto	u301
  1004     05CB  2DCD               	goto	u300
  1005     05CC                     u301:
  1006     05CC  2DB0               	goto	l830
  1007     05CD                     u300:
  1008     05CD                     l838:
  1009     05CD  0873               	movf	___lwmod@dividend+1,w
  1010     05CE  00F1               	movwf	?___lwmod+1
  1011     05CF  0872               	movf	___lwmod@dividend,w
  1012     05D0  00F0               	movwf	?___lwmod
  1013     05D1                     l450:
  1014     05D1  0008               	return
  1015     05D2                     __end_of___lwmod:
  1016                           
  1017                           	psect	text4
  1018     05D2                     __ptext4:	
  1019 ;; *************** function ___lwdiv *****************
  1020 ;; Defined at:
  1021 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  divisor         2    5[COMMON] unsigned int 
  1024 ;;  dividend        2    7[COMMON] unsigned int 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  quotient        2    9[COMMON] unsigned int 
  1027 ;;  counter         1   11[COMMON] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  2    5[COMMON] unsigned int 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         4       0       0       0       0
  1038 ;;      Locals:         3       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0
  1040 ;;      Totals:         7       0       0       0       0
  1041 ;;Total ram usage:        7 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_LcdOutput
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050     05D2                     ___lwdiv:	
  1051                           ;psect for function ___lwdiv
  1052                           
  1053     05D2                     l794:	
  1054                           ;incstack = 0
  1055                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1056                           
  1057     05D2  01F9               	clrf	___lwdiv@quotient
  1058     05D3  01FA               	clrf	___lwdiv@quotient+1
  1059     05D4                     l796:
  1060     05D4  0875               	movf	___lwdiv@divisor,w
  1061     05D5  0476               	iorwf	___lwdiv@divisor+1,w
  1062     05D6  1903               	btfsc	3,2
  1063     05D7  2DD9               	goto	u181
  1064     05D8  2DDA               	goto	u180
  1065     05D9                     u181:
  1066     05D9  2E0F               	goto	l816
  1067     05DA                     u180:
  1068     05DA                     l798:
  1069     05DA  3001               	movlw	1
  1070     05DB  00FB               	movwf	___lwdiv@counter
  1071     05DC  2DE6               	goto	l804
  1072     05DD                     l800:
  1073     05DD  3001               	movlw	1
  1074     05DE                     u195:
  1075     05DE  1003               	clrc
  1076     05DF  0DF5               	rlf	___lwdiv@divisor,f
  1077     05E0  0DF6               	rlf	___lwdiv@divisor+1,f
  1078     05E1  3EFF               	addlw	-1
  1079     05E2  1D03               	skipz
  1080     05E3  2DDE               	goto	u195
  1081     05E4                     l802:
  1082     05E4  3001               	movlw	1
  1083     05E5  07FB               	addwf	___lwdiv@counter,f
  1084     05E6                     l804:
  1085     05E6  1FF6               	btfss	___lwdiv@divisor+1,7
  1086     05E7  2DE9               	goto	u201
  1087     05E8  2DEA               	goto	u200
  1088     05E9                     u201:
  1089     05E9  2DDD               	goto	l800
  1090     05EA                     u200:
  1091     05EA                     l806:
  1092     05EA  3001               	movlw	1
  1093     05EB                     u215:
  1094     05EB  1003               	clrc
  1095     05EC  0DF9               	rlf	___lwdiv@quotient,f
  1096     05ED  0DFA               	rlf	___lwdiv@quotient+1,f
  1097     05EE  3EFF               	addlw	-1
  1098     05EF  1D03               	skipz
  1099     05F0  2DEB               	goto	u215
  1100     05F1  0876               	movf	___lwdiv@divisor+1,w
  1101     05F2  0278               	subwf	___lwdiv@dividend+1,w
  1102     05F3  1D03               	skipz
  1103     05F4  2DF7               	goto	u225
  1104     05F5  0875               	movf	___lwdiv@divisor,w
  1105     05F6  0277               	subwf	___lwdiv@dividend,w
  1106     05F7                     u225:
  1107     05F7  1C03               	skipc
  1108     05F8  2DFA               	goto	u221
  1109     05F9  2DFB               	goto	u220
  1110     05FA                     u221:
  1111     05FA  2E02               	goto	l812
  1112     05FB                     u220:
  1113     05FB                     l808:
  1114     05FB  0875               	movf	___lwdiv@divisor,w
  1115     05FC  02F7               	subwf	___lwdiv@dividend,f
  1116     05FD  0876               	movf	___lwdiv@divisor+1,w
  1117     05FE  1C03               	skipc
  1118     05FF  03F8               	decf	___lwdiv@dividend+1,f
  1119     0600  02F8               	subwf	___lwdiv@dividend+1,f
  1120     0601                     l810:
  1121     0601  1479               	bsf	___lwdiv@quotient,0
  1122     0602                     l812:
  1123     0602  3001               	movlw	1
  1124     0603                     u235:
  1125     0603  1003               	clrc
  1126     0604  0CF6               	rrf	___lwdiv@divisor+1,f
  1127     0605  0CF5               	rrf	___lwdiv@divisor,f
  1128     0606  3EFF               	addlw	-1
  1129     0607  1D03               	skipz
  1130     0608  2E03               	goto	u235
  1131     0609                     l814:
  1132     0609  3001               	movlw	1
  1133     060A  02FB               	subwf	___lwdiv@counter,f
  1134     060B  1D03               	btfss	3,2
  1135     060C  2E0E               	goto	u241
  1136     060D  2E0F               	goto	u240
  1137     060E                     u241:
  1138     060E  2DEA               	goto	l806
  1139     060F                     u240:
  1140     060F                     l816:
  1141     060F  087A               	movf	___lwdiv@quotient+1,w
  1142     0610  00F6               	movwf	?___lwdiv+1
  1143     0611  0879               	movf	___lwdiv@quotient,w
  1144     0612  00F5               	movwf	?___lwdiv
  1145     0613                     l440:
  1146     0613  0008               	return
  1147     0614                     __end_of___lwdiv:
  1148                           
  1149                           	psect	text5
  1150     054B                     __ptext5:	
  1151 ;; *************** function _LcdData *****************
  1152 ;; Defined at:
  1153 ;;		line 140 in file "main.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  i               1    wreg     unsigned char 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  i               1    3[COMMON] unsigned char 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, status,2, status,0
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1167 ;;      Params:         0       0       0       0       0
  1168 ;;      Locals:         1       0       0       0       0
  1169 ;;      Temps:          3       0       0       0       0
  1170 ;;      Totals:         4       0       0       0       0
  1171 ;;Total ram usage:        4 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_keyScan
  1177 ;;		_LcdOutput
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181     054B                     _LcdData:	
  1182                           ;psect for function _LcdData
  1183                           
  1184                           
  1185                           ;incstack = 0
  1186                           ; Regs used in _LcdData: [wreg+status,2+status,0]
  1187                           ;LcdData@i stored from wreg
  1188     054B  00F3               	movwf	LcdData@i
  1189     054C                     l786:
  1190     054C  1283               	bcf	3,5	;RP0=0, select bank0
  1191     054D  1303               	bcf	3,6	;RP1=0, select bank0
  1192     054E  1587               	bsf	7,3	;volatile
  1193     054F                     l788:
  1194     054F  0873               	movf	LcdData@i,w
  1195     0550  0088               	movwf	8	;volatile
  1196     0551                     l790:
  1197     0551  1407               	bsf	7,0	;volatile
  1198     0552  3003               	movlw	3
  1199     0553  00F2               	movwf	??_LcdData+2
  1200     0554  308A               	movlw	138
  1201     0555  00F1               	movwf	??_LcdData+1
  1202     0556  3055               	movlw	85
  1203     0557  00F0               	movwf	??_LcdData
  1204     0558                     u367:
  1205     0558  0BF0               	decfsz	??_LcdData,f
  1206     0559  2D58               	goto	u367
  1207     055A  0BF1               	decfsz	??_LcdData+1,f
  1208     055B  2D58               	goto	u367
  1209     055C  0BF2               	decfsz	??_LcdData+2,f
  1210     055D  2D58               	goto	u367
  1211     055E  2D5F               	nop2
  1212     055F                     l792:
  1213     055F  30FE               	movlw	254
  1214     0560  1283               	bcf	3,5	;RP0=0, select bank0
  1215     0561  1303               	bcf	3,6	;RP1=0, select bank0
  1216     0562  0587               	andwf	7,f	;volatile
  1217     0563                     l71:
  1218     0563  0008               	return
  1219     0564                     __end_of_LcdData:
  1220                           
  1221                           	psect	text6
  1222     069D                     __ptext6:	
  1223 ;; *************** function _Lcdinit *****************
  1224 ;; Defined at:
  1225 ;;		line 45 in file "main.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0, pclath, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1239 ;;      Params:         0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0
  1241 ;;      Temps:          3       0       0       0       0
  1242 ;;      Totals:         3       0       0       0       0
  1243 ;;Total ram usage:        3 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; Hardware stack levels required when called: 1
  1246 ;; This function calls:
  1247 ;;		_LcdCommand
  1248 ;; This function is called by:
  1249 ;;		_main
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253     069D                     _Lcdinit:	
  1254                           ;psect for function _Lcdinit
  1255                           
  1256     069D                     l844:	
  1257                           ;incstack = 0
  1258                           ; Regs used in _Lcdinit: [wreg+status,2+status,0+pclath+cstack]
  1259                           
  1260                           
  1261                           ;main.c: 47: }
  1262     069D  1683               	bsf	3,5	;RP0=1, select bank1
  1263     069E  1303               	bcf	3,6	;RP1=0, select bank1
  1264     069F  0187               	clrf	7	;volatile
  1265                           
  1266                           ;main.c: 48: 
  1267     06A0  0188               	clrf	8	;volatile
  1268     06A1                     l846:
  1269                           
  1270                           ;main.c: 49: void keyScan(void)
  1271     06A1  30F0               	movlw	240
  1272     06A2  0086               	movwf	6	;volatile
  1273     06A3                     l848:
  1274                           
  1275                           ;main.c: 51:     value = PORTB & 0xF0;
  1276     06A3  307F               	movlw	127
  1277     06A4  0581               	andwf	1,f	;volatile
  1278     06A5                     l850:
  1279                           
  1280                           ;main.c: 52: 
  1281     06A5  3003               	movlw	3
  1282     06A6  00F6               	movwf	??_Lcdinit+2
  1283     06A7  308A               	movlw	138
  1284     06A8  00F5               	movwf	??_Lcdinit+1
  1285     06A9  3055               	movlw	85
  1286     06AA  00F4               	movwf	??_Lcdinit
  1287     06AB                     u377:
  1288     06AB  0BF4               	decfsz	??_Lcdinit,f
  1289     06AC  2EAB               	goto	u377
  1290     06AD  0BF5               	decfsz	??_Lcdinit+1,f
  1291     06AE  2EAB               	goto	u377
  1292     06AF  0BF6               	decfsz	??_Lcdinit+2,f
  1293     06B0  2EAB               	goto	u377
  1294     06B1  2EB2               	nop2
  1295     06B2                     l852:
  1296                           
  1297                           ;main.c: 55:         case 0xE0:
  1298     06B2  3030               	movlw	48
  1299     06B3  120A  118A  2564  120A  118A  	fcall	_LcdCommand
  1300     06B8                     l854:
  1301                           
  1302                           ;main.c: 56:                 LcdCommand(0x80);
  1303     06B8  3003               	movlw	3
  1304     06B9  00F6               	movwf	??_Lcdinit+2
  1305     06BA  308A               	movlw	138
  1306     06BB  00F5               	movwf	??_Lcdinit+1
  1307     06BC  3055               	movlw	85
  1308     06BD  00F4               	movwf	??_Lcdinit
  1309     06BE                     u387:
  1310     06BE  0BF4               	decfsz	??_Lcdinit,f
  1311     06BF  2EBE               	goto	u387
  1312     06C0  0BF5               	decfsz	??_Lcdinit+1,f
  1313     06C1  2EBE               	goto	u387
  1314     06C2  0BF6               	decfsz	??_Lcdinit+2,f
  1315     06C3  2EBE               	goto	u387
  1316     06C4  2EC5               	nop2
  1317     06C5                     l856:
  1318                           
  1319                           ;main.c: 57: 
  1320     06C5  3030               	movlw	48
  1321     06C6  120A  118A  2564  120A  118A  	fcall	_LcdCommand
  1322     06CB                     l858:
  1323                           
  1324                           ;main.c: 58:                 for(int i = 0; i < 15; i++)
  1325     06CB  3003               	movlw	3
  1326     06CC  00F6               	movwf	??_Lcdinit+2
  1327     06CD  308A               	movlw	138
  1328     06CE  00F5               	movwf	??_Lcdinit+1
  1329     06CF  3055               	movlw	85
  1330     06D0  00F4               	movwf	??_Lcdinit
  1331     06D1                     u397:
  1332     06D1  0BF4               	decfsz	??_Lcdinit,f
  1333     06D2  2ED1               	goto	u397
  1334     06D3  0BF5               	decfsz	??_Lcdinit+1,f
  1335     06D4  2ED1               	goto	u397
  1336     06D5  0BF6               	decfsz	??_Lcdinit+2,f
  1337     06D6  2ED1               	goto	u397
  1338     06D7  2ED8               	nop2
  1339     06D8                     l860:
  1340                           
  1341                           ;main.c: 59:                 {
  1342     06D8  3030               	movlw	48
  1343     06D9  120A  118A  2564  120A  118A  	fcall	_LcdCommand
  1344     06DE                     l862:
  1345                           
  1346                           ;main.c: 60:                     LcdData(Array[i]);
  1347     06DE  3003               	movlw	3
  1348     06DF  00F6               	movwf	??_Lcdinit+2
  1349     06E0  308A               	movlw	138
  1350     06E1  00F5               	movwf	??_Lcdinit+1
  1351     06E2  3055               	movlw	85
  1352     06E3  00F4               	movwf	??_Lcdinit
  1353     06E4                     u407:
  1354     06E4  0BF4               	decfsz	??_Lcdinit,f
  1355     06E5  2EE4               	goto	u407
  1356     06E6  0BF5               	decfsz	??_Lcdinit+1,f
  1357     06E7  2EE4               	goto	u407
  1358     06E8  0BF6               	decfsz	??_Lcdinit+2,f
  1359     06E9  2EE4               	goto	u407
  1360     06EA  2EEB               	nop2
  1361     06EB                     l864:
  1362                           
  1363                           ;main.c: 61:                 }
  1364     06EB  3038               	movlw	56
  1365     06EC  120A  118A  2564  120A  118A  	fcall	_LcdCommand
  1366     06F1                     l866:
  1367                           
  1368                           ;main.c: 62: 
  1369     06F1  3003               	movlw	3
  1370     06F2  00F6               	movwf	??_Lcdinit+2
  1371     06F3  308A               	movlw	138
  1372     06F4  00F5               	movwf	??_Lcdinit+1
  1373     06F5  3055               	movlw	85
  1374     06F6  00F4               	movwf	??_Lcdinit
  1375     06F7                     u417:
  1376     06F7  0BF4               	decfsz	??_Lcdinit,f
  1377     06F8  2EF7               	goto	u417
  1378     06F9  0BF5               	decfsz	??_Lcdinit+1,f
  1379     06FA  2EF7               	goto	u417
  1380     06FB  0BF6               	decfsz	??_Lcdinit+2,f
  1381     06FC  2EF7               	goto	u417
  1382     06FD  2EFE               	nop2
  1383     06FE                     l868:
  1384                           
  1385                           ;main.c: 63:                 for(int i = 0; i < 4; i++)
  1386     06FE  300C               	movlw	12
  1387     06FF  120A  118A  2564  120A  118A  	fcall	_LcdCommand
  1388     0704                     l870:
  1389                           
  1390                           ;main.c: 64:                 {
  1391     0704  3003               	movlw	3
  1392     0705  00F6               	movwf	??_Lcdinit+2
  1393     0706  308A               	movlw	138
  1394     0707  00F5               	movwf	??_Lcdinit+1
  1395     0708  3055               	movlw	85
  1396     0709  00F4               	movwf	??_Lcdinit
  1397     070A                     u427:
  1398     070A  0BF4               	decfsz	??_Lcdinit,f
  1399     070B  2F0A               	goto	u427
  1400     070C  0BF5               	decfsz	??_Lcdinit+1,f
  1401     070D  2F0A               	goto	u427
  1402     070E  0BF6               	decfsz	??_Lcdinit+2,f
  1403     070F  2F0A               	goto	u427
  1404     0710  2F11               	nop2
  1405     0711                     l872:
  1406                           
  1407                           ;main.c: 65:                     LcdCommand((uint8_t)0x88 + (uint8_t)i);
  1408     0711  3001               	movlw	1
  1409     0712  120A  118A  2564  120A  118A  	fcall	_LcdCommand
  1410     0717                     l874:
  1411                           
  1412                           ;main.c: 66:                     LcdData(0x30 + 0);
  1413     0717  3003               	movlw	3
  1414     0718  00F6               	movwf	??_Lcdinit+2
  1415     0719  308A               	movlw	138
  1416     071A  00F5               	movwf	??_Lcdinit+1
  1417     071B  3055               	movlw	85
  1418     071C  00F4               	movwf	??_Lcdinit
  1419     071D                     u437:
  1420     071D  0BF4               	decfsz	??_Lcdinit,f
  1421     071E  2F1D               	goto	u437
  1422     071F  0BF5               	decfsz	??_Lcdinit+1,f
  1423     0720  2F1D               	goto	u437
  1424     0721  0BF6               	decfsz	??_Lcdinit+2,f
  1425     0722  2F1D               	goto	u437
  1426     0723  2F24               	nop2
  1427     0724                     l876:
  1428                           
  1429                           ;main.c: 67:                 }
  1430     0724  3006               	movlw	6
  1431     0725  120A  118A  2564  120A  118A  	fcall	_LcdCommand
  1432     072A                     l878:
  1433                           
  1434                           ;main.c: 68:             break;
  1435     072A  3003               	movlw	3
  1436     072B  00F6               	movwf	??_Lcdinit+2
  1437     072C  308A               	movlw	138
  1438     072D  00F5               	movwf	??_Lcdinit+1
  1439     072E  3055               	movlw	85
  1440     072F  00F4               	movwf	??_Lcdinit
  1441     0730                     u447:
  1442     0730  0BF4               	decfsz	??_Lcdinit,f
  1443     0731  2F30               	goto	u447
  1444     0732  0BF5               	decfsz	??_Lcdinit+1,f
  1445     0733  2F30               	goto	u447
  1446     0734  0BF6               	decfsz	??_Lcdinit+2,f
  1447     0735  2F30               	goto	u447
  1448     0736  2F37               	nop2
  1449     0737                     l49:
  1450     0737  0008               	return
  1451     0738                     __end_of_Lcdinit:
  1452                           
  1453                           	psect	text7
  1454     0564                     __ptext7:	
  1455 ;; *************** function _LcdCommand *****************
  1456 ;; Defined at:
  1457 ;;		line 150 in file "main.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  i               1    wreg     unsigned char 
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  i               1    3[COMMON] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1471 ;;      Params:         0       0       0       0       0
  1472 ;;      Locals:         1       0       0       0       0
  1473 ;;      Temps:          3       0       0       0       0
  1474 ;;      Totals:         4       0       0       0       0
  1475 ;;Total ram usage:        4 bytes
  1476 ;; Hardware stack levels used: 1
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_Lcdinit
  1481 ;;		_keyScan
  1482 ;;		_LcdOutput
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486     0564                     _LcdCommand:	
  1487                           ;psect for function _LcdCommand
  1488                           
  1489                           
  1490                           ;incstack = 0
  1491                           ; Regs used in _LcdCommand: [wreg+status,2+status,0]
  1492                           ;LcdCommand@i stored from wreg
  1493     0564  00F3               	movwf	LcdCommand@i
  1494     0565                     l778:
  1495     0565  30F7               	movlw	247
  1496     0566  1283               	bcf	3,5	;RP0=0, select bank0
  1497     0567  1303               	bcf	3,6	;RP1=0, select bank0
  1498     0568  0587               	andwf	7,f	;volatile
  1499     0569                     l780:
  1500     0569  0873               	movf	LcdCommand@i,w
  1501     056A  0088               	movwf	8	;volatile
  1502     056B                     l782:
  1503     056B  1407               	bsf	7,0	;volatile
  1504     056C                     l784:
  1505     056C  3003               	movlw	3
  1506     056D  00F2               	movwf	??_LcdCommand+2
  1507     056E  308A               	movlw	138
  1508     056F  00F1               	movwf	??_LcdCommand+1
  1509     0570  3055               	movlw	85
  1510     0571  00F0               	movwf	??_LcdCommand
  1511     0572                     u457:
  1512     0572  0BF0               	decfsz	??_LcdCommand,f
  1513     0573  2D72               	goto	u457
  1514     0574  0BF1               	decfsz	??_LcdCommand+1,f
  1515     0575  2D72               	goto	u457
  1516     0576  0BF2               	decfsz	??_LcdCommand+2,f
  1517     0577  2D72               	goto	u457
  1518     0578  2D79               	nop2
  1519     0579  30FE               	movlw	254
  1520     057A  1283               	bcf	3,5	;RP0=0, select bank0
  1521     057B  1303               	bcf	3,6	;RP1=0, select bank0
  1522     057C  0587               	andwf	7,f	;volatile
  1523     057D                     l74:
  1524     057D  0008               	return
  1525     057E                     __end_of_LcdCommand:
  1526     0002                     ___latbits      equ	2
  1527     007E                     btemp           set	126	;btemp
  1528     007E                     wtemp0          set	126
  1529                           
  1530                           	psect	config
  1531                           
  1532                           ;Config register CONFIG @ 0x2007
  1533                           ;	Oscillator Selection bits
  1534                           ;	FOSC = HS, HS oscillator
  1535                           ;	Watchdog Timer Enable bit
  1536                           ;	WDTE = OFF, WDT disabled
  1537                           ;	Power-up Timer Enable bit
  1538                           ;	PWRTE = OFF, PWRT disabled
  1539                           ;	Brown-out Reset Enable bit
  1540                           ;	BOREN = OFF, BOR disabled
  1541                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1542                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1543                           ;	Data EEPROM Memory Code Protection bit
  1544                           ;	CPD = OFF, Data EEPROM code protection off
  1545                           ;	Flash Program Memory Write Enable bits
  1546                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1547                           ;	In-Circuit Debugger Mode bit
  1548                           ;	DEBUG = 0x1, unprogrammed default
  1549                           ;	Flash Program Memory Code Protection bit
  1550                           ;	CP = OFF, Code protection off
  1551     2007                     	org	8199
  1552     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _keyScan->_LcdOutput
    _LcdOutput->___lwdiv
    ___lwdiv->___lwmod
    _Lcdinit->_LcdCommand

Critical Paths under _main in BANK0

    _main->_keyScan
    _keyScan->_LcdOutput

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     797
                                              8 BANK0      3     3      0
                            _Lcdinit
                            _keyScan
 ---------------------------------------------------------------------------------
 (1) _keyScan                                              4     4      0     768
                                              4 BANK0      4     4      0
                         _LcdCommand
                            _LcdData
                          _LcdOutput
 ---------------------------------------------------------------------------------
 (2) _LcdOutput                                            6     4      2     574
                                             12 COMMON     2     0      2
                                              0 BANK0      4     4      0
                         _LcdCommand
                            _LcdData
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     165
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     168
                                              5 COMMON     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _LcdData                                              4     4      0      29
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcdinit                                              3     3      0      29
                                              4 COMMON     3     3      0
                         _LcdCommand
 ---------------------------------------------------------------------------------
 (3) _LcdCommand                                           4     4      0      29
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcdinit
     _LcdCommand
   _keyScan
     _LcdCommand
     _LcdData
     _LcdOutput
       _LcdCommand
       _LcdData
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     11      32     40.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      46      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Mar 19 21:21:52 2025

                      _j 003A                        _m 003E                        _n 003D  
                      _x 003F                        pc 0002                       l71 0563  
                     l49 0737                       l65 07E7                       l74 057D  
                     l68 069C                       fsr 0004                      l440 0613  
                    l450 05D1                      l800 05DD                      l810 0601  
                    l802 05E4                      l812 0602                      l804 05E6  
                    l820 059A                      l814 0609                      l806 05EA  
                    l830 05B0                      l822 05A0                      l910 0793  
                    l808 05FB                      l816 060F                      l832 05BA  
                    l824 05A3                      l920 07BD                      l912 079C  
                    l904 076E                      l850 06A5                      l834 05C0  
                    l826 05AA                      l842 0614                      l922 07C3  
                    l914 07A2                      l906 077D                      l930 07D9  
                    l780 0569                      l860 06D8                      l852 06B2  
                    l844 069D                      l836 05C7                      l828 05AC  
                    l916 07A8                      l908 0785                      l932 057E  
                    l782 056B                      l870 0704                      l862 06DE  
                    l854 06B8                      l846 06A1                      l790 0551  
                    l838 05CD                      l926 07CA                      l918 07B4  
                    l934 0583                      l784 056C                      l872 0711  
                    l864 06EB                      l856 06C5                      l848 06A3  
                    l792 055F                      l880 0738                      l936 0588  
                    l778 0565                      l874 0717                      l866 06F1  
                    l858 06CB                      l786 054C                      l794 05D2  
                    l882 073C                      l876 0724                      l868 06FE  
                    l788 054F                      l796 05D4                      l892 0749  
                    l884 073F                      l878 072A                      l798 05DA  
                    l894 0755                      l886 0745                      l896 075D  
                    l898 076A                      u200 05EA                      u201 05E9  
                    u220 05FB                      u300 05CD                      u221 05FA  
                    u301 05CC                      u310 076A                      u215 05EB  
                    u311 0769                      u240 060F                      u320 0792  
                    u241 060E                      u225 05F7                      u321 0791  
                    u250 05A0                      u330 079C                      u235 0603  
                    u251 059F                      u331 079B                      u315 0766  
                    u180 05DA                      u340 07BD                      u181 05D9  
                    u341 07BC                      u325 078E                      u270 05B0  
                    u407 06E4                      u271 05AF                      u280 05BA  
                    u417 06F7                      u281 05B9                      u265 05A4  
                    u427 070A                      u195 05DE                      u437 071D  
                    u285 05B6                      u357 0590                      u447 0730  
                    u367 0558                      u295 05C1                      u457 0572  
                    u377 06AB                      u387 06BE                      u397 06D1  
                    fsr0 0004                      indf 0000                     _main 057E  
                   btemp 007E                     start 0000          __end_of_LcdData 0564  
             _LcdCommand 0564          __end_of_Lcdinit 0738                    ?_main 0070  
        __end_of___lwdiv 0614          __end_of___lwmod 05D2                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _Array 0020  
        __end_of_keyScan 07E8                    _value 003C                    pclath 000A  
            keyScan@i_72 0035                    status 0003                    wtemp0 007E  
        __initialization 07E8             __end_of_main 059A                   ??_main 0037  
              ??_LcdData 0070                ??_Lcdinit 0074              ?_LcdCommand 0070  
              ??___lwdiv 0079                ??___lwmod 0074                ??_keyScan 007E  
__end_of__initialization 07FC        __end_of_LcdOutput 069D           __pcstackCOMMON 0070  
           __pidataBANK0 0529               __pbssBANK0 003A               __pmaintext 057E  
                _LcdData 054B                  _Lcdinit 069D                  ___lwdiv 05D2  
                ___lwmod 059A                  __ptext1 0738                  __ptext2 0614  
                __ptext3 059A                  __ptext4 05D2                  __ptext5 054B  
                __ptext6 069D                  __ptext7 0564                  _keyScan 0738  
   end_of_initialization 07FC             ??_LcdCommand 0070       __end_of_LcdCommand 057E  
              _LcdOutput 0614      start_initialization 07E8               init_fetch0 0538  
             ?_LcdOutput 007C              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 002F                 ?_LcdData 0070                 ?_Lcdinit 0070  
       ___lwdiv@dividend 0077                 ?___lwdiv 0075                 ?___lwmod 0070  
               ?_keyScan 0070         ___lwdiv@quotient 0079                 LcdData@i 0073  
            ??_LcdOutput 007E          ___lwdiv@divisor 0075          ___lwdiv@counter 007B  
            LcdCommand@i 0073                 keyScan@i 0033                 init_ram0 053C  
            LcdOutput@d1 002F              LcdOutput@d2 0030              LcdOutput@d3 0031  
            LcdOutput@d4 0032         ___lwmod@dividend 0072               _OPTION_REG 0081  
             LcdOutput@i 007C          ___lwmod@divisor 0070          ___lwmod@counter 0074  
