

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Mar 19 21:15:53 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0004                     fsr             equ	4
    54     0004                     fsr0            equ	4
    55     0000                     indf            equ	0
    56     0000                     indf0           equ	0
    57     0002                     pc              equ	2
    58     0002                     pcl             equ	2
    59     000A                     pclath          equ	10
    60     0003                     status          equ	3
    61     0000                     INDF            equ	0	;# 
    62     0001                     TMR0            equ	1	;# 
    63     0002                     PCL             equ	2	;# 
    64     0003                     STATUS          equ	3	;# 
    65     0004                     FSR             equ	4	;# 
    66     0005                     PORTA           equ	5	;# 
    67     0006                     PORTB           equ	6	;# 
    68     0007                     PORTC           equ	7	;# 
    69     0008                     PORTD           equ	8	;# 
    70     0009                     PORTE           equ	9	;# 
    71     000A                     PCLATH          equ	10	;# 
    72     000B                     INTCON          equ	11	;# 
    73     000C                     PIR1            equ	12	;# 
    74     000D                     PIR2            equ	13	;# 
    75     000E                     TMR1            equ	14	;# 
    76     000E                     TMR1L           equ	14	;# 
    77     000F                     TMR1H           equ	15	;# 
    78     0010                     T1CON           equ	16	;# 
    79     0011                     TMR2            equ	17	;# 
    80     0012                     T2CON           equ	18	;# 
    81     0013                     SSPBUF          equ	19	;# 
    82     0014                     SSPCON          equ	20	;# 
    83     0015                     CCPR1           equ	21	;# 
    84     0015                     CCPR1L          equ	21	;# 
    85     0016                     CCPR1H          equ	22	;# 
    86     0017                     CCP1CON         equ	23	;# 
    87     0018                     RCSTA           equ	24	;# 
    88     0019                     TXREG           equ	25	;# 
    89     001A                     RCREG           equ	26	;# 
    90     001B                     CCPR2           equ	27	;# 
    91     001B                     CCPR2L          equ	27	;# 
    92     001C                     CCPR2H          equ	28	;# 
    93     001D                     CCP2CON         equ	29	;# 
    94     001E                     ADRESH          equ	30	;# 
    95     001F                     ADCON0          equ	31	;# 
    96     0081                     OPTION_REG      equ	129	;# 
    97     0085                     TRISA           equ	133	;# 
    98     0086                     TRISB           equ	134	;# 
    99     0087                     TRISC           equ	135	;# 
   100     0088                     TRISD           equ	136	;# 
   101     0089                     TRISE           equ	137	;# 
   102     008C                     PIE1            equ	140	;# 
   103     008D                     PIE2            equ	141	;# 
   104     008E                     PCON            equ	142	;# 
   105     0091                     SSPCON2         equ	145	;# 
   106     0092                     PR2             equ	146	;# 
   107     0093                     SSPADD          equ	147	;# 
   108     0094                     SSPSTAT         equ	148	;# 
   109     0098                     TXSTA           equ	152	;# 
   110     0099                     SPBRG           equ	153	;# 
   111     009C                     CMCON           equ	156	;# 
   112     009D                     CVRCON          equ	157	;# 
   113     009E                     ADRESL          equ	158	;# 
   114     009F                     ADCON1          equ	159	;# 
   115     010C                     EEDATA          equ	268	;# 
   116     010D                     EEADR           equ	269	;# 
   117     010E                     EEDATH          equ	270	;# 
   118     010F                     EEADRH          equ	271	;# 
   119     018C                     EECON1          equ	396	;# 
   120     018D                     EECON2          equ	397	;# 
   121     0000                     INDF            equ	0	;# 
   122     0001                     TMR0            equ	1	;# 
   123     0002                     PCL             equ	2	;# 
   124     0003                     STATUS          equ	3	;# 
   125     0004                     FSR             equ	4	;# 
   126     0005                     PORTA           equ	5	;# 
   127     0006                     PORTB           equ	6	;# 
   128     0007                     PORTC           equ	7	;# 
   129     0008                     PORTD           equ	8	;# 
   130     0009                     PORTE           equ	9	;# 
   131     000A                     PCLATH          equ	10	;# 
   132     000B                     INTCON          equ	11	;# 
   133     000C                     PIR1            equ	12	;# 
   134     000D                     PIR2            equ	13	;# 
   135     000E                     TMR1            equ	14	;# 
   136     000E                     TMR1L           equ	14	;# 
   137     000F                     TMR1H           equ	15	;# 
   138     0010                     T1CON           equ	16	;# 
   139     0011                     TMR2            equ	17	;# 
   140     0012                     T2CON           equ	18	;# 
   141     0013                     SSPBUF          equ	19	;# 
   142     0014                     SSPCON          equ	20	;# 
   143     0015                     CCPR1           equ	21	;# 
   144     0015                     CCPR1L          equ	21	;# 
   145     0016                     CCPR1H          equ	22	;# 
   146     0017                     CCP1CON         equ	23	;# 
   147     0018                     RCSTA           equ	24	;# 
   148     0019                     TXREG           equ	25	;# 
   149     001A                     RCREG           equ	26	;# 
   150     001B                     CCPR2           equ	27	;# 
   151     001B                     CCPR2L          equ	27	;# 
   152     001C                     CCPR2H          equ	28	;# 
   153     001D                     CCP2CON         equ	29	;# 
   154     001E                     ADRESH          equ	30	;# 
   155     001F                     ADCON0          equ	31	;# 
   156     0081                     OPTION_REG      equ	129	;# 
   157     0085                     TRISA           equ	133	;# 
   158     0086                     TRISB           equ	134	;# 
   159     0087                     TRISC           equ	135	;# 
   160     0088                     TRISD           equ	136	;# 
   161     0089                     TRISE           equ	137	;# 
   162     008C                     PIE1            equ	140	;# 
   163     008D                     PIE2            equ	141	;# 
   164     008E                     PCON            equ	142	;# 
   165     0091                     SSPCON2         equ	145	;# 
   166     0092                     PR2             equ	146	;# 
   167     0093                     SSPADD          equ	147	;# 
   168     0094                     SSPSTAT         equ	148	;# 
   169     0098                     TXSTA           equ	152	;# 
   170     0099                     SPBRG           equ	153	;# 
   171     009C                     CMCON           equ	156	;# 
   172     009D                     CVRCON          equ	157	;# 
   173     009E                     ADRESL          equ	158	;# 
   174     009F                     ADCON1          equ	159	;# 
   175     010C                     EEDATA          equ	268	;# 
   176     010D                     EEADR           equ	269	;# 
   177     010E                     EEDATH          equ	270	;# 
   178     010F                     EEADRH          equ	271	;# 
   179     018C                     EECON1          equ	396	;# 
   180     018D                     EECON2          equ	397	;# 
   181     0008                     _PORTD          set	8
   182     0007                     _PORTC          set	7
   183     0088                     _TRISD          set	136
   184     0087                     _TRISC          set	135
   185                           
   186                           	psect	cinit
   187     07E8                     start_initialization:	
   188                           ; #config settings
   189                           
   190     07E8                     __initialization:
   191                           
   192                           ; Clear objects allocated to COMMON
   193     07E8  01FA               	clrf	__pbssCOMMON& (0+127)
   194     07E9  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   195     07EA  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   196                           
   197                           ; Clear objects allocated to BANK0
   198     07EB  1283               	bcf	3,5	;RP0=0, select bank0
   199     07EC  1303               	bcf	3,6	;RP1=0, select bank0
   200     07ED  01A0               	clrf	__pbssBANK0& (0+127)
   201     07EE  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   202     07EF  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   203     07F0  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   204     07F1  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   205     07F2  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   206     07F3  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   207     07F4  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   208     07F5  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   209     07F6  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   210     07F7  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   211     07F8  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   212     07F9  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   213     07FA  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   214     07FB  01AE               	clrf	(__pbssBANK0+14)& (0+127)
   215     07FC                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218     07FC                     __end_of__initialization:
   219     07FC  0183               	clrf	3
   220     07FD  120A  118A  2E94   	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	bssCOMMON
   223     007A                     __pbssCOMMON:
   224     007A                     _plus:
   225     007A                     	ds	1
   226     007B                     _Equal:
   227     007B                     	ds	1
   228     007C                     _j:
   229     007C                     	ds	1
   230                           
   231                           	psect	bssBANK0
   232     0020                     __pbssBANK0:
   233     0020                     _k:
   234     0020                     	ds	5
   235     0025                     _n:
   236     0025                     	ds	2
   237     0027                     _m:
   238     0027                     	ds	2
   239     0029                     _sum:
   240     0029                     	ds	2
   241     002B                     _num2:
   242     002B                     	ds	2
   243     002D                     _num1:
   244     002D                     	ds	2
   245                           
   246                           	psect	cstackCOMMON
   247     0070                     __pcstackCOMMON:
   248     0070                     ?_Lcdinit:
   249     0070                     ?_LcdCommand:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ?_LcdData:	
   253                           ; 1 bytes @ 0x0
   254                           
   255     0070                     ?_main:	
   256                           ; 1 bytes @ 0x0
   257                           
   258     0070                     ?___lwdiv:	
   259                           ; 1 bytes @ 0x0
   260                           
   261     0070                     ?___lwmod:	
   262                           ; 2 bytes @ 0x0
   263                           
   264     0070                     ___lwdiv@divisor:	
   265                           ; 2 bytes @ 0x0
   266                           
   267     0070                     ___lwmod@divisor:	
   268                           ; 2 bytes @ 0x0
   269                           
   270     0070                     ??_LcdCommand:	
   271                           ; 2 bytes @ 0x0
   272                           
   273     0070                     ??_LcdData:	
   274                           ; 1 bytes @ 0x0
   275                           
   276                           
   277                           ; 1 bytes @ 0x0
   278     0070                     	ds	2
   279     0072                     ___lwdiv@dividend:
   280     0072                     ___lwmod@dividend:	
   281                           ; 2 bytes @ 0x2
   282                           
   283                           
   284                           ; 2 bytes @ 0x2
   285     0072                     	ds	1
   286     0073                     LcdData@i:
   287     0073                     LcdCommand@i:	
   288                           ; 1 bytes @ 0x3
   289                           
   290                           
   291                           ; 1 bytes @ 0x3
   292     0073                     	ds	1
   293     0074                     ___lwmod@counter:
   294     0074                     ___lwdiv@quotient:	
   295                           ; 1 bytes @ 0x4
   296                           
   297     0074                     ??_Lcdinit:	
   298                           ; 2 bytes @ 0x4
   299                           
   300     0074                     ??___lwdiv:	
   301                           ; 1 bytes @ 0x4
   302                           
   303     0074                     ??___lwmod:	
   304                           ; 1 bytes @ 0x4
   305                           
   306                           
   307                           ; 1 bytes @ 0x4
   308     0074                     	ds	2
   309     0076                     ___lwdiv@counter:
   310                           
   311                           ; 1 bytes @ 0x6
   312     0076                     	ds	1
   313     0077                     ?_LcdOutput:
   314     0077                     LcdOutput@i:	
   315                           ; 1 bytes @ 0x7
   316                           
   317                           
   318                           ; 2 bytes @ 0x7
   319     0077                     	ds	2
   320     0079                     ??_LcdOutput:
   321                           
   322                           ; 1 bytes @ 0x9
   323     0079                     	ds	1
   324     007A                     ??_main:
   325                           
   326                           	psect	cstackBANK0
   327     002F                     __pcstackBANK0:	
   328                           ; 1 bytes @ 0xA
   329                           
   330     002F                     LcdOutput@digits:
   331                           
   332                           ; 10 bytes @ 0x0
   333     002F                     	ds	10
   334     0039                     LcdOutput@count:
   335                           
   336                           ; 2 bytes @ 0xA
   337     0039                     	ds	2
   338     003B                     LcdOutput@j:
   339                           
   340                           ; 2 bytes @ 0xC
   341     003B                     	ds	2
   342                           
   343                           	psect	maintext
   344     0694                     __pmaintext:	
   345 ;;
   346 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   347 ;;
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 31 in file "main.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : B00/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels required when called: 2
   370 ;; This function calls:
   371 ;;		_LcdCommand
   372 ;;		_LcdData
   373 ;;		_LcdOutput
   374 ;;		_Lcdinit
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380     0694                     _main:	
   381                           ;psect for function _main
   382                           
   383     0694                     l874:	
   384                           ;incstack = 0
   385                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   386                           
   387                           
   388                           ;main.c: 32:     LcdOutput(sum);
   389     0694  120A  118A  2764  120A  118A  	fcall	_Lcdinit
   390     0699                     l876:
   391                           
   392                           ;main.c: 34: }
   393     0699  3064               	movlw	100
   394     069A  1283               	bcf	3,5	;RP0=0, select bank0
   395     069B  1303               	bcf	3,6	;RP1=0, select bank0
   396     069C  00AD               	movwf	_num1
   397     069D  3000               	movlw	0
   398     069E  00AE               	movwf	_num1+1
   399     069F                     l878:
   400                           
   401                           ;main.c: 35: 
   402     069F  30C8               	movlw	200
   403     06A0  00AB               	movwf	_num2
   404     06A1  3000               	movlw	0
   405     06A2  00AC               	movwf	_num2+1
   406     06A3                     l880:
   407                           
   408                           ;main.c: 36: void LcdOutput(uint16_t i)
   409     06A3  303D               	movlw	61
   410     06A4  00FB               	movwf	_Equal
   411     06A5                     l882:
   412                           
   413                           ;main.c: 37: {
   414     06A5  302B               	movlw	43
   415     06A6  00FA               	movwf	_plus
   416                           
   417                           ;main.c: 39:     int count = 0;
   418     06A7  3080               	movlw	128
   419     06A8  120A  118A  2600  120A  118A  	fcall	_LcdCommand
   420     06AD                     l884:
   421                           
   422                           ;main.c: 40: 
   423     06AD  3064               	movlw	100
   424     06AE  00F7               	movwf	LcdOutput@i
   425     06AF  3000               	movlw	0
   426     06B0  00F8               	movwf	LcdOutput@i+1
   427     06B1  120A  118A  26F6  120A  118A  	fcall	_LcdOutput
   428     06B6                     l886:
   429                           
   430                           ;main.c: 42:     if (i == 0) {
   431     06B6  3083               	movlw	131
   432     06B7  120A  118A  2600  120A  118A  	fcall	_LcdCommand
   433     06BC                     l888:
   434                           
   435                           ;main.c: 43:         LcdData('0');
   436     06BC  302B               	movlw	43
   437     06BD  120A  118A  25E7  120A  118A  	fcall	_LcdData
   438     06C2                     l890:
   439                           
   440                           ;main.c: 45:     }
   441     06C2  3084               	movlw	132
   442     06C3  120A  118A  2600  120A  118A  	fcall	_LcdCommand
   443                           
   444                           ;main.c: 46: 
   445     06C8  30C8               	movlw	200
   446     06C9  00F7               	movwf	LcdOutput@i
   447     06CA  3000               	movlw	0
   448     06CB  00F8               	movwf	LcdOutput@i+1
   449     06CC  120A  118A  26F6  120A  118A  	fcall	_LcdOutput
   450     06D1                     l892:
   451                           
   452                           ;main.c: 48:     while (i > 0) {
   453     06D1  3087               	movlw	135
   454     06D2  120A  118A  2600  120A  118A  	fcall	_LcdCommand
   455     06D7                     l894:
   456                           
   457                           ;main.c: 49:         digits[count] = i % 10;
   458     06D7  303D               	movlw	61
   459     06D8  120A  118A  25E7  120A  118A  	fcall	_LcdData
   460     06DD                     l896:
   461                           
   462                           ;main.c: 50:         i /= 10;
   463     06DD  302C               	movlw	44
   464     06DE  1283               	bcf	3,5	;RP0=0, select bank0
   465     06DF  1303               	bcf	3,6	;RP1=0, select bank0
   466     06E0  00A9               	movwf	_sum
   467     06E1  3001               	movlw	1
   468     06E2  00AA               	movwf	_sum+1
   469     06E3                     l898:
   470                           
   471                           ;main.c: 52:     }
   472     06E3  3089               	movlw	137
   473     06E4  120A  118A  2600  120A  118A  	fcall	_LcdCommand
   474     06E9                     l900:
   475                           
   476                           ;main.c: 53: 
   477     06E9  302C               	movlw	44
   478     06EA  00F7               	movwf	LcdOutput@i
   479     06EB  3001               	movlw	1
   480     06EC  00F8               	movwf	LcdOutput@i+1
   481     06ED  120A  118A  26F6  120A  118A  	fcall	_LcdOutput
   482     06F2                     l41:	
   483                           ;main.c: 54: 
   484                           
   485     06F2                     l42:
   486     06F2  2EF2               	goto	l41
   487     06F3  120A  118A  2800   	ljmp	start
   488     06F6                     __end_of_main:
   489                           
   490                           	psect	text1
   491     0764                     __ptext1:	
   492 ;; *************** function _Lcdinit *****************
   493 ;; Defined at:
   494 ;;		line 82 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, pclath, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   508 ;;      Params:         0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0
   510 ;;      Temps:          3       0       0       0       0
   511 ;;      Totals:         3       0       0       0       0
   512 ;;Total ram usage:        3 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; Hardware stack levels required when called: 1
   515 ;; This function calls:
   516 ;;		_LcdCommand
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522     0764                     _Lcdinit:	
   523                           ;psect for function _Lcdinit
   524                           
   525     0764                     l818:	
   526                           ;incstack = 0
   527                           ; Regs used in _Lcdinit: [wreg+status,2+status,0+pclath+cstack]
   528                           
   529                           
   530                           ;main.c: 83: void LcdData(uint8_t i) {
   531     0764  1683               	bsf	3,5	;RP0=1, select bank1
   532     0765  1303               	bcf	3,6	;RP1=0, select bank1
   533     0766  0187               	clrf	7	;volatile
   534                           
   535                           ;main.c: 84:     PORTC |= (0x1 << 3);
   536     0767  0188               	clrf	8	;volatile
   537     0768                     l820:
   538                           
   539                           ;main.c: 86:     PORTC |= (0x1 << 0);
   540     0768  3003               	movlw	3
   541     0769  00F6               	movwf	??_Lcdinit+2
   542     076A  308A               	movlw	138
   543     076B  00F5               	movwf	??_Lcdinit+1
   544     076C  3055               	movlw	85
   545     076D  00F4               	movwf	??_Lcdinit
   546     076E                     u337:
   547     076E  0BF4               	decfsz	??_Lcdinit,f
   548     076F  2F6E               	goto	u337
   549     0770  0BF5               	decfsz	??_Lcdinit+1,f
   550     0771  2F6E               	goto	u337
   551     0772  0BF6               	decfsz	??_Lcdinit+2,f
   552     0773  2F6E               	goto	u337
   553     0774  2F75               	nop2
   554     0775                     l822:
   555                           
   556                           ;main.c: 89: }
   557     0775  3030               	movlw	48
   558     0776  120A  118A  2600  120A  118A  	fcall	_LcdCommand
   559     077B                     l824:
   560                           
   561                           ;main.c: 90: 
   562     077B  3003               	movlw	3
   563     077C  00F6               	movwf	??_Lcdinit+2
   564     077D  308A               	movlw	138
   565     077E  00F5               	movwf	??_Lcdinit+1
   566     077F  3055               	movlw	85
   567     0780  00F4               	movwf	??_Lcdinit
   568     0781                     u347:
   569     0781  0BF4               	decfsz	??_Lcdinit,f
   570     0782  2F81               	goto	u347
   571     0783  0BF5               	decfsz	??_Lcdinit+1,f
   572     0784  2F81               	goto	u347
   573     0785  0BF6               	decfsz	??_Lcdinit+2,f
   574     0786  2F81               	goto	u347
   575     0787  2F88               	nop2
   576     0788                     l826:
   577                           
   578                           ;main.c: 91: 
   579     0788  3030               	movlw	48
   580     0789  120A  118A  2600  120A  118A  	fcall	_LcdCommand
   581     078E                     l828:
   582                           
   583                           ;main.c: 92: void LcdCommand(uint8_t i) {
   584     078E  3003               	movlw	3
   585     078F  00F6               	movwf	??_Lcdinit+2
   586     0790  308A               	movlw	138
   587     0791  00F5               	movwf	??_Lcdinit+1
   588     0792  3055               	movlw	85
   589     0793  00F4               	movwf	??_Lcdinit
   590     0794                     u357:
   591     0794  0BF4               	decfsz	??_Lcdinit,f
   592     0795  2F94               	goto	u357
   593     0796  0BF5               	decfsz	??_Lcdinit+1,f
   594     0797  2F94               	goto	u357
   595     0798  0BF6               	decfsz	??_Lcdinit+2,f
   596     0799  2F94               	goto	u357
   597     079A  2F9B               	nop2
   598     079B                     l830:
   599                           
   600                           ;main.c: 93:     PORTC &= ~(0x1 << 3);
   601     079B  3030               	movlw	48
   602     079C  120A  118A  2600  120A  118A  	fcall	_LcdCommand
   603     07A1                     l832:
   604                           
   605                           ;main.c: 94:     PORTD = i;
   606     07A1  3003               	movlw	3
   607     07A2  00F6               	movwf	??_Lcdinit+2
   608     07A3  308A               	movlw	138
   609     07A4  00F5               	movwf	??_Lcdinit+1
   610     07A5  3055               	movlw	85
   611     07A6  00F4               	movwf	??_Lcdinit
   612     07A7                     u367:
   613     07A7  0BF4               	decfsz	??_Lcdinit,f
   614     07A8  2FA7               	goto	u367
   615     07A9  0BF5               	decfsz	??_Lcdinit+1,f
   616     07AA  2FA7               	goto	u367
   617     07AB  0BF6               	decfsz	??_Lcdinit+2,f
   618     07AC  2FA7               	goto	u367
   619     07AD  2FAE               	nop2
   620     07AE                     l834:
   621                           
   622                           ;main.c: 95:     PORTC |= (0x1 << 0);
   623     07AE  3038               	movlw	56
   624     07AF  120A  118A  2600  120A  118A  	fcall	_LcdCommand
   625     07B4                     l836:
   626                           
   627                           ;main.c: 96:     _delay((unsigned long)((100)*(20000000/4000.0)));
   628     07B4  3003               	movlw	3
   629     07B5  00F6               	movwf	??_Lcdinit+2
   630     07B6  308A               	movlw	138
   631     07B7  00F5               	movwf	??_Lcdinit+1
   632     07B8  3055               	movlw	85
   633     07B9  00F4               	movwf	??_Lcdinit
   634     07BA                     u377:
   635     07BA  0BF4               	decfsz	??_Lcdinit,f
   636     07BB  2FBA               	goto	u377
   637     07BC  0BF5               	decfsz	??_Lcdinit+1,f
   638     07BD  2FBA               	goto	u377
   639     07BE  0BF6               	decfsz	??_Lcdinit+2,f
   640     07BF  2FBA               	goto	u377
   641     07C0  2FC1               	nop2
   642     07C1                     l838:
   643                           
   644                           ;main.c: 97:     PORTC &= ~(0x1 << 0);
   645     07C1  300C               	movlw	12
   646     07C2  120A  118A  2600  120A  118A  	fcall	_LcdCommand
   647     07C7                     l840:
   648                           
   649                           ;main.c: 98: }
   650     07C7  3003               	movlw	3
   651     07C8  00F6               	movwf	??_Lcdinit+2
   652     07C9  308A               	movlw	138
   653     07CA  00F5               	movwf	??_Lcdinit+1
   654     07CB  3055               	movlw	85
   655     07CC  00F4               	movwf	??_Lcdinit
   656     07CD                     u387:
   657     07CD  0BF4               	decfsz	??_Lcdinit,f
   658     07CE  2FCD               	goto	u387
   659     07CF  0BF5               	decfsz	??_Lcdinit+1,f
   660     07D0  2FCD               	goto	u387
   661     07D1  0BF6               	decfsz	??_Lcdinit+2,f
   662     07D2  2FCD               	goto	u387
   663     07D3  2FD4               	nop2
   664     07D4                     l842:
   665     07D4  3001               	movlw	1
   666     07D5  120A  118A  2600  120A  118A  	fcall	_LcdCommand
   667     07DA                     l844:
   668     07DA  3003               	movlw	3
   669     07DB  00F6               	movwf	??_Lcdinit+2
   670     07DC  308A               	movlw	138
   671     07DD  00F5               	movwf	??_Lcdinit+1
   672     07DE  3055               	movlw	85
   673     07DF  00F4               	movwf	??_Lcdinit
   674     07E0                     u397:
   675     07E0  0BF4               	decfsz	??_Lcdinit,f
   676     07E1  2FE0               	goto	u397
   677     07E2  0BF5               	decfsz	??_Lcdinit+1,f
   678     07E3  2FE0               	goto	u397
   679     07E4  0BF6               	decfsz	??_Lcdinit+2,f
   680     07E5  2FE0               	goto	u397
   681     07E6  2FE7               	nop2
   682     07E7                     l56:
   683     07E7  0008               	return
   684     07E8                     __end_of_Lcdinit:
   685                           
   686                           	psect	text2
   687     0600                     __ptext2:	
   688 ;; *************** function _LcdCommand *****************
   689 ;; Defined at:
   690 ;;		line 113 in file "main.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  i               1    wreg     unsigned char 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  i               1    3[COMMON] unsigned char 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         0       0       0       0       0
   705 ;;      Locals:         1       0       0       0       0
   706 ;;      Temps:          3       0       0       0       0
   707 ;;      Totals:         4       0       0       0       0
   708 ;;Total ram usage:        4 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_main
   714 ;;		_Lcdinit
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718     0600                     _LcdCommand:	
   719                           ;psect for function _LcdCommand
   720                           
   721                           
   722                           ;incstack = 0
   723                           ; Regs used in _LcdCommand: [wreg+status,2+status,0]
   724                           ;LcdCommand@i stored from wreg
   725     0600  00F3               	movwf	LcdCommand@i
   726     0601                     l754:
   727     0601  30F7               	movlw	247
   728     0602  1283               	bcf	3,5	;RP0=0, select bank0
   729     0603  1303               	bcf	3,6	;RP1=0, select bank0
   730     0604  0587               	andwf	7,f	;volatile
   731     0605                     l756:
   732     0605  0873               	movf	LcdCommand@i,w
   733     0606  0088               	movwf	8	;volatile
   734     0607                     l758:
   735     0607  1407               	bsf	7,0	;volatile
   736     0608                     l760:
   737     0608  3003               	movlw	3
   738     0609  00F2               	movwf	??_LcdCommand+2
   739     060A  308A               	movlw	138
   740     060B  00F1               	movwf	??_LcdCommand+1
   741     060C  3055               	movlw	85
   742     060D  00F0               	movwf	??_LcdCommand
   743     060E                     u407:
   744     060E  0BF0               	decfsz	??_LcdCommand,f
   745     060F  2E0E               	goto	u407
   746     0610  0BF1               	decfsz	??_LcdCommand+1,f
   747     0611  2E0E               	goto	u407
   748     0612  0BF2               	decfsz	??_LcdCommand+2,f
   749     0613  2E0E               	goto	u407
   750     0614  2E15               	nop2
   751     0615  30FE               	movlw	254
   752     0616  1283               	bcf	3,5	;RP0=0, select bank0
   753     0617  1303               	bcf	3,6	;RP1=0, select bank0
   754     0618  0587               	andwf	7,f	;volatile
   755     0619                     l62:
   756     0619  0008               	return
   757     061A                     __end_of_LcdCommand:
   758                           
   759                           	psect	text3
   760     06F6                     __ptext3:	
   761 ;; *************** function _LcdOutput *****************
   762 ;; Defined at:
   763 ;;		line 57 in file "main.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  i               2    7[COMMON] unsigned short 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  j               2   12[BANK0 ] int 
   768 ;;  digits         10    0[BANK0 ] int [5]
   769 ;;  count           2   10[BANK0 ] int 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         2       0       0       0       0
   780 ;;      Locals:         0      14       0       0       0
   781 ;;      Temps:          1       0       0       0       0
   782 ;;      Totals:         3      14       0       0       0
   783 ;;Total ram usage:       17 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; Hardware stack levels required when called: 1
   786 ;; This function calls:
   787 ;;		_LcdData
   788 ;;		___lwdiv
   789 ;;		___lwmod
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795     06F6                     _LcdOutput:	
   796                           ;psect for function _LcdOutput
   797                           
   798     06F6                     l846:	
   799                           ;incstack = 0
   800                           ; Regs used in _LcdOutput: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   801                           
   802                           
   803                           ;main.c: 57:     };main.c: 58: };main.c: 59: ;main.c: 60: 
   804     06F6  1283               	bcf	3,5	;RP0=0, select bank0
   805     06F7  1303               	bcf	3,6	;RP1=0, select bank0
   806     06F8  01B9               	clrf	LcdOutput@count
   807     06F9  01BA               	clrf	LcdOutput@count+1
   808     06FA                     l848:
   809                           
   810                           ;main.c: 63:     TRISD = 0x00;
   811     06FA  0877               	movf	LcdOutput@i,w
   812     06FB  0478               	iorwf	LcdOutput@i+1,w
   813     06FC  1D03               	btfss	3,2
   814     06FD  2EFF               	goto	u301
   815     06FE  2F00               	goto	u300
   816     06FF                     u301:
   817     06FF  2F3A               	goto	l860
   818     0700                     u300:
   819     0700                     l850:
   820                           
   821                           ;main.c: 64: 
   822     0700  3030               	movlw	48
   823     0701  120A  118A  25E7  120A  118A  	fcall	_LcdData
   824     0706  2F63               	goto	l48
   825     0707                     l854:
   826                           
   827                           ;main.c: 70:     LcdCommand(0x30);
   828     0707  300A               	movlw	10
   829     0708  00F0               	movwf	___lwmod@divisor
   830     0709  3000               	movlw	0
   831     070A  00F1               	movwf	___lwmod@divisor+1
   832     070B  0878               	movf	LcdOutput@i+1,w
   833     070C  00F3               	movwf	___lwmod@dividend+1
   834     070D  0877               	movf	LcdOutput@i,w
   835     070E  00F2               	movwf	___lwmod@dividend
   836     070F  120A  118A  261A  120A  118A  	fcall	___lwmod
   837     0714  1283               	bcf	3,5	;RP0=0, select bank0
   838     0715  1303               	bcf	3,6	;RP1=0, select bank0
   839     0716  0839               	movf	LcdOutput@count,w
   840     0717  00F9               	movwf	??_LcdOutput
   841     0718  0779               	addwf	??_LcdOutput,w
   842     0719  3E2F               	addlw	(low (LcdOutput@digits| 0))& (0+255)
   843     071A  0084               	movwf	4
   844     071B  0870               	movf	?___lwmod,w
   845     071C  1383               	bcf	3,7	;select IRP bank0
   846     071D  0080               	movwf	0
   847     071E  0A84               	incf	4,f
   848     071F  0871               	movf	?___lwmod+1,w
   849     0720  0080               	movwf	0
   850     0721                     l856:
   851                           
   852                           ;main.c: 71:     _delay((unsigned long)((100)*(20000000/4000.0)));
   853     0721  300A               	movlw	10
   854     0722  00F0               	movwf	___lwdiv@divisor
   855     0723  3000               	movlw	0
   856     0724  00F1               	movwf	___lwdiv@divisor+1
   857     0725  0878               	movf	LcdOutput@i+1,w
   858     0726  00F3               	movwf	___lwdiv@dividend+1
   859     0727  0877               	movf	LcdOutput@i,w
   860     0728  00F2               	movwf	___lwdiv@dividend
   861     0729  120A  118A  2652  120A  118A  	fcall	___lwdiv
   862     072E  0871               	movf	?___lwdiv+1,w
   863     072F  00F8               	movwf	LcdOutput@i+1
   864     0730  0870               	movf	?___lwdiv,w
   865     0731  00F7               	movwf	LcdOutput@i
   866     0732                     l858:
   867                           
   868                           ;main.c: 72:     LcdCommand(0x30);
   869     0732  3001               	movlw	1
   870     0733  1283               	bcf	3,5	;RP0=0, select bank0
   871     0734  1303               	bcf	3,6	;RP1=0, select bank0
   872     0735  07B9               	addwf	LcdOutput@count,f
   873     0736  1803               	skipnc
   874     0737  0ABA               	incf	LcdOutput@count+1,f
   875     0738  3000               	movlw	0
   876     0739  07BA               	addwf	LcdOutput@count+1,f
   877     073A                     l860:
   878                           
   879                           ;main.c: 69:     _delay((unsigned long)((100)*(20000000/4000.0)));
   880     073A  0877               	movf	LcdOutput@i,w
   881     073B  0478               	iorwf	LcdOutput@i+1,w
   882     073C  1D03               	btfss	3,2
   883     073D  2F3F               	goto	u311
   884     073E  2F40               	goto	u310
   885     073F                     u311:
   886     073F  2F07               	goto	l854
   887     0740                     u310:
   888     0740                     l862:
   889                           
   890                           ;main.c: 76:     LcdCommand(0x0C);
   891     0740  0839               	movf	LcdOutput@count,w
   892     0741  3EFF               	addlw	255
   893     0742  00BB               	movwf	LcdOutput@j
   894     0743  083A               	movf	LcdOutput@count+1,w
   895     0744  1803               	skipnc
   896     0745  3E01               	addlw	1
   897     0746  3EFF               	addlw	255
   898     0747  00BC               	movwf	LcdOutput@j+1
   899     0748                     l864:
   900     0748  1FBC               	btfss	LcdOutput@j+1,7
   901     0749  2F4B               	goto	u321
   902     074A  2F4C               	goto	u320
   903     074B                     u321:
   904     074B  2F4D               	goto	l868
   905     074C                     u320:
   906     074C  2F63               	goto	l48
   907     074D                     l868:
   908                           
   909                           ;main.c: 77:     _delay((unsigned long)((100)*(20000000/4000.0)));
   910     074D  083B               	movf	LcdOutput@j,w
   911     074E  00F9               	movwf	??_LcdOutput
   912     074F  0779               	addwf	??_LcdOutput,w
   913     0750  3E2F               	addlw	(low (LcdOutput@digits| 0))& (0+255)
   914     0751  0084               	movwf	4
   915     0752  1383               	bcf	3,7	;select IRP bank0
   916     0753  0800               	movf	0,w
   917     0754  3E30               	addlw	48
   918     0755  120A  118A  25E7  120A  118A  	fcall	_LcdData
   919     075A                     l870:
   920                           
   921                           ;main.c: 78:     LcdCommand(0x01);
   922     075A  30FF               	movlw	255
   923     075B  1283               	bcf	3,5	;RP0=0, select bank0
   924     075C  1303               	bcf	3,6	;RP1=0, select bank0
   925     075D  07BB               	addwf	LcdOutput@j,f
   926     075E  1803               	skipnc
   927     075F  0ABC               	incf	LcdOutput@j+1,f
   928     0760  30FF               	movlw	255
   929     0761  07BC               	addwf	LcdOutput@j+1,f
   930     0762  2F48               	goto	l864
   931     0763                     l48:
   932     0763  0008               	return
   933     0764                     __end_of_LcdOutput:
   934                           
   935                           	psect	text4
   936     061A                     __ptext4:	
   937 ;; *************** function ___lwmod *****************
   938 ;; Defined at:
   939 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  divisor         2    0[COMMON] unsigned int 
   942 ;;  dividend        2    2[COMMON] unsigned int 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  counter         1    4[COMMON] unsigned char 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  2    0[COMMON] unsigned int 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         4       0       0       0       0
   955 ;;      Locals:         1       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0
   957 ;;      Totals:         5       0       0       0       0
   958 ;;Total ram usage:        5 bytes
   959 ;; Hardware stack levels used: 1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_LcdOutput
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967     061A                     ___lwmod:	
   968                           ;psect for function ___lwmod
   969                           
   970     061A                     l796:	
   971                           ;incstack = 0
   972                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   973                           
   974     061A  0870               	movf	___lwmod@divisor,w
   975     061B  0471               	iorwf	___lwmod@divisor+1,w
   976     061C  1903               	btfsc	3,2
   977     061D  2E1F               	goto	u241
   978     061E  2E20               	goto	u240
   979     061F                     u241:
   980     061F  2E4D               	goto	l814
   981     0620                     u240:
   982     0620                     l798:
   983     0620  3001               	movlw	1
   984     0621  00F4               	movwf	___lwmod@counter
   985     0622  2E2C               	goto	l804
   986     0623                     l800:
   987     0623  3001               	movlw	1
   988     0624                     u255:
   989     0624  1003               	clrc
   990     0625  0DF0               	rlf	___lwmod@divisor,f
   991     0626  0DF1               	rlf	___lwmod@divisor+1,f
   992     0627  3EFF               	addlw	-1
   993     0628  1D03               	skipz
   994     0629  2E24               	goto	u255
   995     062A                     l802:
   996     062A  3001               	movlw	1
   997     062B  07F4               	addwf	___lwmod@counter,f
   998     062C                     l804:
   999     062C  1FF1               	btfss	___lwmod@divisor+1,7
  1000     062D  2E2F               	goto	u261
  1001     062E  2E30               	goto	u260
  1002     062F                     u261:
  1003     062F  2E23               	goto	l800
  1004     0630                     u260:
  1005     0630                     l806:
  1006     0630  0871               	movf	___lwmod@divisor+1,w
  1007     0631  0273               	subwf	___lwmod@dividend+1,w
  1008     0632  1D03               	skipz
  1009     0633  2E36               	goto	u275
  1010     0634  0870               	movf	___lwmod@divisor,w
  1011     0635  0272               	subwf	___lwmod@dividend,w
  1012     0636                     u275:
  1013     0636  1C03               	skipc
  1014     0637  2E39               	goto	u271
  1015     0638  2E3A               	goto	u270
  1016     0639                     u271:
  1017     0639  2E40               	goto	l810
  1018     063A                     u270:
  1019     063A                     l808:
  1020     063A  0870               	movf	___lwmod@divisor,w
  1021     063B  02F2               	subwf	___lwmod@dividend,f
  1022     063C  0871               	movf	___lwmod@divisor+1,w
  1023     063D  1C03               	skipc
  1024     063E  03F3               	decf	___lwmod@dividend+1,f
  1025     063F  02F3               	subwf	___lwmod@dividend+1,f
  1026     0640                     l810:
  1027     0640  3001               	movlw	1
  1028     0641                     u285:
  1029     0641  1003               	clrc
  1030     0642  0CF1               	rrf	___lwmod@divisor+1,f
  1031     0643  0CF0               	rrf	___lwmod@divisor,f
  1032     0644  3EFF               	addlw	-1
  1033     0645  1D03               	skipz
  1034     0646  2E41               	goto	u285
  1035     0647                     l812:
  1036     0647  3001               	movlw	1
  1037     0648  02F4               	subwf	___lwmod@counter,f
  1038     0649  1D03               	btfss	3,2
  1039     064A  2E4C               	goto	u291
  1040     064B  2E4D               	goto	u290
  1041     064C                     u291:
  1042     064C  2E30               	goto	l806
  1043     064D                     u290:
  1044     064D                     l814:
  1045     064D  0873               	movf	___lwmod@dividend+1,w
  1046     064E  00F1               	movwf	?___lwmod+1
  1047     064F  0872               	movf	___lwmod@dividend,w
  1048     0650  00F0               	movwf	?___lwmod
  1049     0651                     l438:
  1050     0651  0008               	return
  1051     0652                     __end_of___lwmod:
  1052                           
  1053                           	psect	text5
  1054     0652                     __ptext5:	
  1055 ;; *************** function ___lwdiv *****************
  1056 ;; Defined at:
  1057 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  divisor         2    0[COMMON] unsigned int 
  1060 ;;  dividend        2    2[COMMON] unsigned int 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  quotient        2    4[COMMON] unsigned int 
  1063 ;;  counter         1    6[COMMON] unsigned char 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  2    0[COMMON] unsigned int 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1073 ;;      Params:         4       0       0       0       0
  1074 ;;      Locals:         3       0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0
  1076 ;;      Totals:         7       0       0       0       0
  1077 ;;Total ram usage:        7 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; This function calls:
  1080 ;;		Nothing
  1081 ;; This function is called by:
  1082 ;;		_LcdOutput
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086     0652                     ___lwdiv:	
  1087                           ;psect for function ___lwdiv
  1088                           
  1089     0652                     l770:	
  1090                           ;incstack = 0
  1091                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1092                           
  1093     0652  01F4               	clrf	___lwdiv@quotient
  1094     0653  01F5               	clrf	___lwdiv@quotient+1
  1095     0654                     l772:
  1096     0654  0870               	movf	___lwdiv@divisor,w
  1097     0655  0471               	iorwf	___lwdiv@divisor+1,w
  1098     0656  1903               	btfsc	3,2
  1099     0657  2E59               	goto	u171
  1100     0658  2E5A               	goto	u170
  1101     0659                     u171:
  1102     0659  2E8F               	goto	l792
  1103     065A                     u170:
  1104     065A                     l774:
  1105     065A  3001               	movlw	1
  1106     065B  00F6               	movwf	___lwdiv@counter
  1107     065C  2E66               	goto	l780
  1108     065D                     l776:
  1109     065D  3001               	movlw	1
  1110     065E                     u185:
  1111     065E  1003               	clrc
  1112     065F  0DF0               	rlf	___lwdiv@divisor,f
  1113     0660  0DF1               	rlf	___lwdiv@divisor+1,f
  1114     0661  3EFF               	addlw	-1
  1115     0662  1D03               	skipz
  1116     0663  2E5E               	goto	u185
  1117     0664                     l778:
  1118     0664  3001               	movlw	1
  1119     0665  07F6               	addwf	___lwdiv@counter,f
  1120     0666                     l780:
  1121     0666  1FF1               	btfss	___lwdiv@divisor+1,7
  1122     0667  2E69               	goto	u191
  1123     0668  2E6A               	goto	u190
  1124     0669                     u191:
  1125     0669  2E5D               	goto	l776
  1126     066A                     u190:
  1127     066A                     l782:
  1128     066A  3001               	movlw	1
  1129     066B                     u205:
  1130     066B  1003               	clrc
  1131     066C  0DF4               	rlf	___lwdiv@quotient,f
  1132     066D  0DF5               	rlf	___lwdiv@quotient+1,f
  1133     066E  3EFF               	addlw	-1
  1134     066F  1D03               	skipz
  1135     0670  2E6B               	goto	u205
  1136     0671  0871               	movf	___lwdiv@divisor+1,w
  1137     0672  0273               	subwf	___lwdiv@dividend+1,w
  1138     0673  1D03               	skipz
  1139     0674  2E77               	goto	u215
  1140     0675  0870               	movf	___lwdiv@divisor,w
  1141     0676  0272               	subwf	___lwdiv@dividend,w
  1142     0677                     u215:
  1143     0677  1C03               	skipc
  1144     0678  2E7A               	goto	u211
  1145     0679  2E7B               	goto	u210
  1146     067A                     u211:
  1147     067A  2E82               	goto	l788
  1148     067B                     u210:
  1149     067B                     l784:
  1150     067B  0870               	movf	___lwdiv@divisor,w
  1151     067C  02F2               	subwf	___lwdiv@dividend,f
  1152     067D  0871               	movf	___lwdiv@divisor+1,w
  1153     067E  1C03               	skipc
  1154     067F  03F3               	decf	___lwdiv@dividend+1,f
  1155     0680  02F3               	subwf	___lwdiv@dividend+1,f
  1156     0681                     l786:
  1157     0681  1474               	bsf	___lwdiv@quotient,0
  1158     0682                     l788:
  1159     0682  3001               	movlw	1
  1160     0683                     u225:
  1161     0683  1003               	clrc
  1162     0684  0CF1               	rrf	___lwdiv@divisor+1,f
  1163     0685  0CF0               	rrf	___lwdiv@divisor,f
  1164     0686  3EFF               	addlw	-1
  1165     0687  1D03               	skipz
  1166     0688  2E83               	goto	u225
  1167     0689                     l790:
  1168     0689  3001               	movlw	1
  1169     068A  02F6               	subwf	___lwdiv@counter,f
  1170     068B  1D03               	btfss	3,2
  1171     068C  2E8E               	goto	u231
  1172     068D  2E8F               	goto	u230
  1173     068E                     u231:
  1174     068E  2E6A               	goto	l782
  1175     068F                     u230:
  1176     068F                     l792:
  1177     068F  0875               	movf	___lwdiv@quotient+1,w
  1178     0690  00F1               	movwf	?___lwdiv+1
  1179     0691  0874               	movf	___lwdiv@quotient,w
  1180     0692  00F0               	movwf	?___lwdiv
  1181     0693                     l428:
  1182     0693  0008               	return
  1183     0694                     __end_of___lwdiv:
  1184                           
  1185                           	psect	text6
  1186     05E7                     __ptext6:	
  1187 ;; *************** function _LcdData *****************
  1188 ;; Defined at:
  1189 ;;		line 104 in file "main.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  i               1    wreg     unsigned char 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  i               1    3[COMMON] unsigned char 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2, status,0
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1203 ;;      Params:         0       0       0       0       0
  1204 ;;      Locals:         1       0       0       0       0
  1205 ;;      Temps:          3       0       0       0       0
  1206 ;;      Totals:         4       0       0       0       0
  1207 ;;Total ram usage:        4 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_main
  1213 ;;		_LcdOutput
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217     05E7                     _LcdData:	
  1218                           ;psect for function _LcdData
  1219                           
  1220                           
  1221                           ;incstack = 0
  1222                           ; Regs used in _LcdData: [wreg+status,2+status,0]
  1223                           ;LcdData@i stored from wreg
  1224     05E7  00F3               	movwf	LcdData@i
  1225     05E8                     l762:
  1226     05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1227     05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1228     05EA  1587               	bsf	7,3	;volatile
  1229     05EB                     l764:
  1230     05EB  0873               	movf	LcdData@i,w
  1231     05EC  0088               	movwf	8	;volatile
  1232     05ED                     l766:
  1233     05ED  1407               	bsf	7,0	;volatile
  1234     05EE  3003               	movlw	3
  1235     05EF  00F2               	movwf	??_LcdData+2
  1236     05F0  308A               	movlw	138
  1237     05F1  00F1               	movwf	??_LcdData+1
  1238     05F2  3055               	movlw	85
  1239     05F3  00F0               	movwf	??_LcdData
  1240     05F4                     u417:
  1241     05F4  0BF0               	decfsz	??_LcdData,f
  1242     05F5  2DF4               	goto	u417
  1243     05F6  0BF1               	decfsz	??_LcdData+1,f
  1244     05F7  2DF4               	goto	u417
  1245     05F8  0BF2               	decfsz	??_LcdData+2,f
  1246     05F9  2DF4               	goto	u417
  1247     05FA  2DFB               	nop2
  1248     05FB                     l768:
  1249     05FB  30FE               	movlw	254
  1250     05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1251     05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1252     05FE  0587               	andwf	7,f	;volatile
  1253     05FF                     l59:
  1254     05FF  0008               	return
  1255     0600                     __end_of_LcdData:
  1256     0002                     ___latbits      equ	2
  1257     007E                     btemp           set	126	;btemp
  1258     007E                     wtemp0          set	126
  1259                           
  1260                           	psect	config
  1261                           
  1262                           ;Config register CONFIG @ 0x2007
  1263                           ;	Oscillator Selection bits
  1264                           ;	FOSC = HS, HS oscillator
  1265                           ;	Watchdog Timer Enable bit
  1266                           ;	WDTE = OFF, WDT disabled
  1267                           ;	Power-up Timer Enable bit
  1268                           ;	PWRTE = OFF, PWRT disabled
  1269                           ;	Brown-out Reset Enable bit
  1270                           ;	BOREN = OFF, BOR disabled
  1271                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1272                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1273                           ;	Data EEPROM Memory Code Protection bit
  1274                           ;	CPD = OFF, Data EEPROM code protection off
  1275                           ;	Flash Program Memory Write Enable bits
  1276                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1277                           ;	In-Circuit Debugger Mode bit
  1278                           ;	DEBUG = 0x1, unprogrammed default
  1279                           ;	Flash Program Memory Code Protection bit
  1280                           ;	CP = OFF, Code protection off
  1281     2007                     	org	8199
  1282     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80     14      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LcdOutput
    _Lcdinit->_LcdCommand
    _LcdOutput->___lwdiv

Critical Paths under _main in BANK0

    _main->_LcdOutput

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     694
                         _LcdCommand
                            _LcdData
                          _LcdOutput
                            _Lcdinit
 ---------------------------------------------------------------------------------
 (1) _Lcdinit                                              3     3      0      29
                                              4 COMMON     3     3      0
                         _LcdCommand
 ---------------------------------------------------------------------------------
 (2) _LcdCommand                                           4     4      0      29
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _LcdOutput                                           17    15      2     607
                                              7 COMMON     3     1      2
                                              0 BANK0     14    14      0
                            _LcdData
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     161
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     164
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LcdData                                              4     4      0      29
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcdCommand
   _LcdData
   _LcdOutput
     _LcdData
     ___lwdiv
     ___lwmod
   _Lcdinit
     _LcdCommand

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     10      13     92.9%
BANK0               80     14      29     36.2%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      42      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Mar 19 21:15:53 2025

                      _j 007C                        _k 0020                        _m 0027  
                      _n 0025                       l41 06F2                       l42 06F2  
                     l62 0619                       l48 0763                       l56 07E7  
                     l59 05FF                      l428 0693                      l438 0651  
                    l800 0623                      l810 0640                      l802 062A  
                    l812 0647                      l804 062C                      l820 0768  
                    l900 06E9                      l806 0630                      l814 064D  
                    l830 079B                      l822 0775                      l808 063A  
                    l760 0608                      l840 07C7                      l832 07A1  
                    l824 077B                      l762 05E8                      l770 0652  
                    l850 0700                      l754 0601                      l842 07D4  
                    l834 07AE                      l826 0788                      l818 0764  
                    l764 05EB                      l780 0666                      l772 0654  
                    l860 073A                      l756 0605                      l844 07DA  
                    l836 07B4                      l828 078E                      l766 05ED  
                    l790 0689                      l782 066A                      l774 065A  
                    l870 075A                      l862 0740                      l854 0707  
                    l846 06F6                      l758 0607                      l838 07C1  
                    l768 05FB                      l784 067B                      l776 065D  
                    l792 068F                      l864 0748                      l856 0721  
                    l848 06FA                      l880 06A3                      l786 0681  
                    l778 0664                      l858 0732                      l890 06C2  
                    l882 06A5                      l874 0694                      l788 0682  
                    l796 061A                      l868 074D                      l892 06D1  
                    l884 06AD                      l876 0699                      l798 0620  
                    l894 06D7                      l886 06B6                      l878 069F  
                    l896 06DD                      l888 06BC                      l898 06E3  
                    u210 067B                      u211 067A                      u300 0700  
                    u205 066B                      u301 06FF                      u230 068F  
                    u310 0740                      u231 068E                      u215 0677  
                    u311 073F                      u240 0620                      u320 074C  
                    u225 0683                      u241 061F                      u321 074B  
                    u170 065A                      u171 0659                      u260 0630  
                    u261 062F                      u190 066A                      u270 063A  
                    u191 0669                      u271 0639                      u255 0624  
                    u407 060E                      u417 05F4                      u185 065E  
                    u337 076E                      u290 064D                      u291 064C  
                    u275 0636                      u347 0781                      u285 0641  
                    u357 0794                      u367 07A7                      u377 07BA  
                    u387 07CD                      u397 07E0                      fsr0 0004  
                    _sum 0029                      indf 0000                     _main 0694  
                   _num1 002D                     _num2 002B                     _plus 007A  
                   btemp 007E                     start 0000          __end_of_LcdData 0600  
             _LcdCommand 0600          __end_of_Lcdinit 07E8                    ?_main 0070  
        __end_of___lwdiv 0694          __end_of___lwmod 0652                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
                  _Equal 007B                    status 0003                    wtemp0 007E  
        __initialization 07E8             __end_of_main 06F6                   ??_main 007A  
              ??_LcdData 0070                ??_Lcdinit 0074              ?_LcdCommand 0070  
              ??___lwdiv 0074                ??___lwmod 0074  __end_of__initialization 07FC  
      __end_of_LcdOutput 0764           __pcstackCOMMON 0070               __pbssBANK0 0020  
         LcdOutput@count 0039               __pmaintext 0694                  _LcdData 05E7  
                _Lcdinit 0764                  ___lwdiv 0652                  ___lwmod 061A  
                __ptext1 0764                  __ptext2 0600                  __ptext3 06F6  
                __ptext4 061A                  __ptext5 0652                  __ptext6 05E7  
   end_of_initialization 07FC             ??_LcdCommand 0070       __end_of_LcdCommand 061A  
              _LcdOutput 06F6      start_initialization 07E8               ?_LcdOutput 0077  
            __pbssCOMMON 007A                ___latbits 0002            __pcstackBANK0 002F  
               ?_LcdData 0070                 ?_Lcdinit 0070          LcdOutput@digits 002F  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070                 ?___lwmod 0070  
       ___lwdiv@quotient 0074                 LcdData@i 0073              ??_LcdOutput 0079  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076              LcdCommand@i 0073  
       ___lwmod@dividend 0072               LcdOutput@i 0077               LcdOutput@j 003B  
        ___lwmod@divisor 0070          ___lwmod@counter 0074  
