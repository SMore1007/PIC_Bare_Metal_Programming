

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Mar 10 16:05:20 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 12/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0004                     fsr             equ	4
    51     0004                     fsr0            equ	4
    52     0000                     indf            equ	0
    53     0000                     indf0           equ	0
    54     0002                     pc              equ	2
    55     0002                     pcl             equ	2
    56     000A                     pclath          equ	10
    57     0003                     status          equ	3
    58     0000                     INDF            equ	0	;# 
    59     0001                     TMR0            equ	1	;# 
    60     0002                     PCL             equ	2	;# 
    61     0003                     STATUS          equ	3	;# 
    62     0004                     FSR             equ	4	;# 
    63     0005                     PORTA           equ	5	;# 
    64     0006                     PORTB           equ	6	;# 
    65     0007                     PORTC           equ	7	;# 
    66     0008                     PORTD           equ	8	;# 
    67     0009                     PORTE           equ	9	;# 
    68     000A                     PCLATH          equ	10	;# 
    69     000B                     INTCON          equ	11	;# 
    70     000C                     PIR1            equ	12	;# 
    71     000D                     PIR2            equ	13	;# 
    72     000E                     TMR1            equ	14	;# 
    73     000E                     TMR1L           equ	14	;# 
    74     000F                     TMR1H           equ	15	;# 
    75     0010                     T1CON           equ	16	;# 
    76     0011                     TMR2            equ	17	;# 
    77     0012                     T2CON           equ	18	;# 
    78     0013                     SSPBUF          equ	19	;# 
    79     0014                     SSPCON          equ	20	;# 
    80     0015                     CCPR1           equ	21	;# 
    81     0015                     CCPR1L          equ	21	;# 
    82     0016                     CCPR1H          equ	22	;# 
    83     0017                     CCP1CON         equ	23	;# 
    84     0018                     RCSTA           equ	24	;# 
    85     0019                     TXREG           equ	25	;# 
    86     001A                     RCREG           equ	26	;# 
    87     001B                     CCPR2           equ	27	;# 
    88     001B                     CCPR2L          equ	27	;# 
    89     001C                     CCPR2H          equ	28	;# 
    90     001D                     CCP2CON         equ	29	;# 
    91     001E                     ADRESH          equ	30	;# 
    92     001F                     ADCON0          equ	31	;# 
    93     0081                     OPTION_REG      equ	129	;# 
    94     0085                     TRISA           equ	133	;# 
    95     0086                     TRISB           equ	134	;# 
    96     0087                     TRISC           equ	135	;# 
    97     0088                     TRISD           equ	136	;# 
    98     0089                     TRISE           equ	137	;# 
    99     008C                     PIE1            equ	140	;# 
   100     008D                     PIE2            equ	141	;# 
   101     008E                     PCON            equ	142	;# 
   102     0091                     SSPCON2         equ	145	;# 
   103     0092                     PR2             equ	146	;# 
   104     0093                     SSPADD          equ	147	;# 
   105     0094                     SSPSTAT         equ	148	;# 
   106     0098                     TXSTA           equ	152	;# 
   107     0099                     SPBRG           equ	153	;# 
   108     009C                     CMCON           equ	156	;# 
   109     009D                     CVRCON          equ	157	;# 
   110     009E                     ADRESL          equ	158	;# 
   111     009F                     ADCON1          equ	159	;# 
   112     010C                     EEDATA          equ	268	;# 
   113     010D                     EEADR           equ	269	;# 
   114     010E                     EEDATH          equ	270	;# 
   115     010F                     EEADRH          equ	271	;# 
   116     018C                     EECON1          equ	396	;# 
   117     018D                     EECON2          equ	397	;# 
   118     0000                     INDF            equ	0	;# 
   119     0001                     TMR0            equ	1	;# 
   120     0002                     PCL             equ	2	;# 
   121     0003                     STATUS          equ	3	;# 
   122     0004                     FSR             equ	4	;# 
   123     0005                     PORTA           equ	5	;# 
   124     0006                     PORTB           equ	6	;# 
   125     0007                     PORTC           equ	7	;# 
   126     0008                     PORTD           equ	8	;# 
   127     0009                     PORTE           equ	9	;# 
   128     000A                     PCLATH          equ	10	;# 
   129     000B                     INTCON          equ	11	;# 
   130     000C                     PIR1            equ	12	;# 
   131     000D                     PIR2            equ	13	;# 
   132     000E                     TMR1            equ	14	;# 
   133     000E                     TMR1L           equ	14	;# 
   134     000F                     TMR1H           equ	15	;# 
   135     0010                     T1CON           equ	16	;# 
   136     0011                     TMR2            equ	17	;# 
   137     0012                     T2CON           equ	18	;# 
   138     0013                     SSPBUF          equ	19	;# 
   139     0014                     SSPCON          equ	20	;# 
   140     0015                     CCPR1           equ	21	;# 
   141     0015                     CCPR1L          equ	21	;# 
   142     0016                     CCPR1H          equ	22	;# 
   143     0017                     CCP1CON         equ	23	;# 
   144     0018                     RCSTA           equ	24	;# 
   145     0019                     TXREG           equ	25	;# 
   146     001A                     RCREG           equ	26	;# 
   147     001B                     CCPR2           equ	27	;# 
   148     001B                     CCPR2L          equ	27	;# 
   149     001C                     CCPR2H          equ	28	;# 
   150     001D                     CCP2CON         equ	29	;# 
   151     001E                     ADRESH          equ	30	;# 
   152     001F                     ADCON0          equ	31	;# 
   153     0081                     OPTION_REG      equ	129	;# 
   154     0085                     TRISA           equ	133	;# 
   155     0086                     TRISB           equ	134	;# 
   156     0087                     TRISC           equ	135	;# 
   157     0088                     TRISD           equ	136	;# 
   158     0089                     TRISE           equ	137	;# 
   159     008C                     PIE1            equ	140	;# 
   160     008D                     PIE2            equ	141	;# 
   161     008E                     PCON            equ	142	;# 
   162     0091                     SSPCON2         equ	145	;# 
   163     0092                     PR2             equ	146	;# 
   164     0093                     SSPADD          equ	147	;# 
   165     0094                     SSPSTAT         equ	148	;# 
   166     0098                     TXSTA           equ	152	;# 
   167     0099                     SPBRG           equ	153	;# 
   168     009C                     CMCON           equ	156	;# 
   169     009D                     CVRCON          equ	157	;# 
   170     009E                     ADRESL          equ	158	;# 
   171     009F                     ADCON1          equ	159	;# 
   172     010C                     EEDATA          equ	268	;# 
   173     010D                     EEADR           equ	269	;# 
   174     010E                     EEDATH          equ	270	;# 
   175     010F                     EEADRH          equ	271	;# 
   176     018C                     EECON1          equ	396	;# 
   177     018D                     EECON2          equ	397	;# 
   178                           
   179                           	psect	idataBANK0
   180     06E0                     __pidataBANK0:
   181                           
   182                           ;initializer for _a
   183     06E0  3448               	retlw	72
   184     06E1  3445               	retlw	69
   185     06E2  344C               	retlw	76
   186     06E3  344C               	retlw	76
   187     06E4  344F               	retlw	79
   188     06E5  3420               	retlw	32
   189     06E6  3457               	retlw	87
   190     06E7  344F               	retlw	79
   191     06E8  3452               	retlw	82
   192     06E9  344C               	retlw	76
   193     06EA  3444               	retlw	68
   194     06EB  3400               	retlw	0
   195     06EC  3400               	retlw	0
   196     06ED  3400               	retlw	0
   197     06EE  3400               	retlw	0
   198     06EF  3400               	retlw	0
   199     06F0  3400               	retlw	0
   200     06F1  3400               	retlw	0
   201     0008                     _PORTD          set	8
   202     0007                     _PORTC          set	7
   203     0088                     _TRISD          set	136
   204     0087                     _TRISC          set	135
   205                           
   206                           	psect	cinit
   207     07EB                     start_initialization:	
   208                           ; #config settings
   209                           
   210     07EB                     __initialization:
   211                           
   212                           ; Initialize objects allocated to BANK0
   213     07EB  1383               	bcf	3,7	;select IRP bank0
   214     07EC  3032               	movlw	low (__pdataBANK0+18)
   215     07ED  00FD               	movwf	btemp+-1
   216     07EE  3006               	movlw	high __pidataBANK0
   217     07EF  00FE               	movwf	btemp
   218     07F0  30E0               	movlw	low __pidataBANK0
   219     07F1  00FF               	movwf	btemp+1
   220     07F2  3020               	movlw	low __pdataBANK0
   221     07F3  0084               	movwf	4
   222     07F4  120A  118A  26F6  120A  118A  	fcall	init_ram0
   223                           
   224                           ; Clear objects allocated to COMMON
   225     07F9  01F9               	clrf	__pbssCOMMON& (0+127)
   226     07FA  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   227     07FB  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   228     07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231     07FC                     __end_of__initialization:
   232     07FC  0183               	clrf	3
   233     07FD  120A  118A  2F38   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	bssCOMMON
   236     0079                     __pbssCOMMON:
   237     0079                     _m:
   238     0079                     	ds	1
   239     007A                     _i:
   240     007A                     	ds	1
   241     007B                     _x:
   242     007B                     	ds	1
   243                           
   244                           	psect	dataBANK0
   245     0020                     __pdataBANK0:
   246     0020                     _a:
   247     0020                     	ds	18
   248                           
   249                           	psect	inittext
   250     06F2                     init_fetch0:	
   251                           ;	Called with low address in FSR and high address in W
   252                           
   253     06F2  087E               	movf	btemp,w
   254     06F3  008A               	movwf	10
   255     06F4  087F               	movf	btemp+1,w
   256     06F5  0082               	movwf	2
   257     06F6                     init_ram0:	
   258                           ;Called with:
   259                           ;	high address of idata address in btemp 
   260                           ;	low address of idata address in btemp+1 
   261                           ;	low address of data in FSR
   262                           ;	high address + 1 of data in btemp-1
   263                           
   264     06F6  120A  118A  26F2  120A  118A  	fcall	init_fetch0
   265     06FB  0080               	movwf	0
   266     06FC  0A84               	incf	4,f
   267     06FD  0804               	movf	4,w
   268     06FE  067D               	xorwf	btemp+-1,w
   269     06FF  1903               	btfsc	3,2
   270     0700  3400               	retlw	0
   271     0701  0AFF               	incf	btemp+1,f
   272     0702  1903               	btfsc	3,2
   273     0703  0AFE               	incf	btemp,f
   274     0704  2EF6               	goto	init_ram0
   275                           
   276                           	psect	cstackCOMMON
   277     0070                     __pcstackCOMMON:
   278     0070                     ?_Lcdinit:
   279     0070                     ?_LcdCommand:	
   280                           ; 1 bytes @ 0x0
   281                           
   282     0070                     ?_LcdData:	
   283                           ; 1 bytes @ 0x0
   284                           
   285     0070                     ?_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288     0070                     ??_LcdCommand:	
   289                           ; 1 bytes @ 0x0
   290                           
   291     0070                     ??_LcdData:	
   292                           ; 1 bytes @ 0x0
   293                           
   294                           
   295                           ; 1 bytes @ 0x0
   296     0070                     	ds	3
   297     0073                     LcdData@i:
   298     0073                     LcdCommand@i:	
   299                           ; 1 bytes @ 0x3
   300                           
   301                           
   302                           ; 1 bytes @ 0x3
   303     0073                     	ds	1
   304     0074                     ??_Lcdinit:
   305                           
   306                           ; 1 bytes @ 0x4
   307     0074                     	ds	3
   308     0077                     main@i:
   309     0077                     ??_main:	
   310                           ; 2 bytes @ 0x7
   311                           
   312                           
   313                           ; 1 bytes @ 0x7
   314     0077                     	ds	2
   315                           
   316                           	psect	maintext
   317     0738                     __pmaintext:	
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 22 in file "main.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;  i               2    7[COMMON] int 
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : B00/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         2       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0
   340 ;;      Totals:         2       0       0       0       0
   341 ;;Total ram usage:        2 bytes
   342 ;; Hardware stack levels required when called: 2
   343 ;; This function calls:
   344 ;;		_LcdCommand
   345 ;;		_LcdData
   346 ;;		_Lcdinit
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352     0738                     _main:	
   353                           ;psect for function _main
   354                           
   355     0738                     l631:	
   356                           ;incstack = 0
   357                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   358                           
   359                           
   360                           ;main.c: 23:     Lcdinit();
   361     0738  120A  118A  2767  120A  118A  	fcall	_Lcdinit
   362     073D                     l633:
   363                           
   364                           ;main.c: 24:     for(int i = 0; i < 11; i++)
   365     073D  01F7               	clrf	main@i
   366     073E  01F8               	clrf	main@i+1
   367     073F                     l639:
   368                           
   369                           ;main.c: 25:     {;main.c: 26:         LcdCommand(0x80 + i);
   370     073F  0877               	movf	main@i,w
   371     0740  3E80               	addlw	128
   372     0741  120A  118A  271E  120A  118A  	fcall	_LcdCommand
   373     0746                     l641:
   374                           
   375                           ;main.c: 27:         LcdData(a[i]);
   376     0746  0877               	movf	main@i,w
   377     0747  3E20               	addlw	(low (_a| 0))& (0+255)
   378     0748  0084               	movwf	4
   379     0749  1383               	bcf	3,7	;select IRP bank0
   380     074A  0800               	movf	0,w
   381     074B  120A  118A  2705  120A  118A  	fcall	_LcdData
   382     0750                     l643:
   383                           
   384                           ;main.c: 28:     }
   385     0750  3001               	movlw	1
   386     0751  07F7               	addwf	main@i,f
   387     0752  1803               	skipnc
   388     0753  0AF8               	incf	main@i+1,f
   389     0754  3000               	movlw	0
   390     0755  07F8               	addwf	main@i+1,f
   391     0756                     l645:
   392     0756  0878               	movf	main@i+1,w
   393     0757  3A80               	xorlw	128
   394     0758  00FF               	movwf	btemp+1
   395     0759  3080               	movlw	128
   396     075A  027F               	subwf	btemp+1,w
   397     075B  1D03               	skipz
   398     075C  2F5F               	goto	u15
   399     075D  300B               	movlw	11
   400     075E  0277               	subwf	main@i,w
   401     075F                     u15:
   402     075F  1C03               	skipc
   403     0760  2F62               	goto	u11
   404     0761  2F63               	goto	u10
   405     0762                     u11:
   406     0762  2F3F               	goto	l639
   407     0763                     u10:
   408     0763                     l31:	
   409                           ;main.c: 29:     while(1);
   410                           
   411     0763  2F63               	goto	l31
   412     0764  120A  118A  2800   	ljmp	start
   413     0767                     __end_of_main:
   414                           
   415                           	psect	text1
   416     0767                     __ptext1:	
   417 ;; *************** function _Lcdinit *****************
   418 ;; Defined at:
   419 ;;		line 32 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, pclath, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          3       0       0       0       0
   436 ;;      Totals:         3       0       0       0       0
   437 ;;Total ram usage:        3 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; Hardware stack levels required when called: 1
   440 ;; This function calls:
   441 ;;		_LcdCommand
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447     0767                     _Lcdinit:	
   448                           ;psect for function _Lcdinit
   449                           
   450     0767                     l595:	
   451                           ;incstack = 0
   452                           ; Regs used in _Lcdinit: [wreg+status,2+status,0+pclath+cstack]
   453                           
   454                           
   455                           ;main.c: 34:     TRISC = 0x00;
   456     0767  1683               	bsf	3,5	;RP0=1, select bank1
   457     0768  1303               	bcf	3,6	;RP1=0, select bank1
   458     0769  0187               	clrf	7	;volatile
   459                           
   460                           ;main.c: 35:     TRISD = 0x00;
   461     076A  0188               	clrf	8	;volatile
   462     076B                     l597:
   463                           
   464                           ;main.c: 36:     _delay((unsigned long)((100)*(20000000/4000.0)));
   465     076B  3003               	movlw	3
   466     076C  00F6               	movwf	??_Lcdinit+2
   467     076D  308A               	movlw	138
   468     076E  00F5               	movwf	??_Lcdinit+1
   469     076F  3055               	movlw	85
   470     0770  00F4               	movwf	??_Lcdinit
   471     0771                     u27:
   472     0771  0BF4               	decfsz	??_Lcdinit,f
   473     0772  2F71               	goto	u27
   474     0773  0BF5               	decfsz	??_Lcdinit+1,f
   475     0774  2F71               	goto	u27
   476     0775  0BF6               	decfsz	??_Lcdinit+2,f
   477     0776  2F71               	goto	u27
   478     0777  2F78               	nop2
   479     0778                     l599:
   480                           
   481                           ;main.c: 37:     LcdCommand(0x30);
   482     0778  3030               	movlw	48
   483     0779  120A  118A  271E  120A  118A  	fcall	_LcdCommand
   484     077E                     l601:
   485                           
   486                           ;main.c: 38:     _delay((unsigned long)((100)*(20000000/4000.0)));
   487     077E  3003               	movlw	3
   488     077F  00F6               	movwf	??_Lcdinit+2
   489     0780  308A               	movlw	138
   490     0781  00F5               	movwf	??_Lcdinit+1
   491     0782  3055               	movlw	85
   492     0783  00F4               	movwf	??_Lcdinit
   493     0784                     u37:
   494     0784  0BF4               	decfsz	??_Lcdinit,f
   495     0785  2F84               	goto	u37
   496     0786  0BF5               	decfsz	??_Lcdinit+1,f
   497     0787  2F84               	goto	u37
   498     0788  0BF6               	decfsz	??_Lcdinit+2,f
   499     0789  2F84               	goto	u37
   500     078A  2F8B               	nop2
   501     078B                     l603:
   502                           
   503                           ;main.c: 39:     LcdCommand(0x30);
   504     078B  3030               	movlw	48
   505     078C  120A  118A  271E  120A  118A  	fcall	_LcdCommand
   506     0791                     l605:
   507                           
   508                           ;main.c: 40:     _delay((unsigned long)((100)*(20000000/4000.0)));
   509     0791  3003               	movlw	3
   510     0792  00F6               	movwf	??_Lcdinit+2
   511     0793  308A               	movlw	138
   512     0794  00F5               	movwf	??_Lcdinit+1
   513     0795  3055               	movlw	85
   514     0796  00F4               	movwf	??_Lcdinit
   515     0797                     u47:
   516     0797  0BF4               	decfsz	??_Lcdinit,f
   517     0798  2F97               	goto	u47
   518     0799  0BF5               	decfsz	??_Lcdinit+1,f
   519     079A  2F97               	goto	u47
   520     079B  0BF6               	decfsz	??_Lcdinit+2,f
   521     079C  2F97               	goto	u47
   522     079D  2F9E               	nop2
   523     079E                     l607:
   524                           
   525                           ;main.c: 41:     LcdCommand(0x30);
   526     079E  3030               	movlw	48
   527     079F  120A  118A  271E  120A  118A  	fcall	_LcdCommand
   528     07A4                     l609:
   529                           
   530                           ;main.c: 42:     _delay((unsigned long)((100)*(20000000/4000.0)));
   531     07A4  3003               	movlw	3
   532     07A5  00F6               	movwf	??_Lcdinit+2
   533     07A6  308A               	movlw	138
   534     07A7  00F5               	movwf	??_Lcdinit+1
   535     07A8  3055               	movlw	85
   536     07A9  00F4               	movwf	??_Lcdinit
   537     07AA                     u57:
   538     07AA  0BF4               	decfsz	??_Lcdinit,f
   539     07AB  2FAA               	goto	u57
   540     07AC  0BF5               	decfsz	??_Lcdinit+1,f
   541     07AD  2FAA               	goto	u57
   542     07AE  0BF6               	decfsz	??_Lcdinit+2,f
   543     07AF  2FAA               	goto	u57
   544     07B0  2FB1               	nop2
   545     07B1                     l611:
   546                           
   547                           ;main.c: 43:     LcdCommand(0x38);
   548     07B1  3038               	movlw	56
   549     07B2  120A  118A  271E  120A  118A  	fcall	_LcdCommand
   550     07B7                     l613:
   551                           
   552                           ;main.c: 44:     _delay((unsigned long)((100)*(20000000/4000.0)));
   553     07B7  3003               	movlw	3
   554     07B8  00F6               	movwf	??_Lcdinit+2
   555     07B9  308A               	movlw	138
   556     07BA  00F5               	movwf	??_Lcdinit+1
   557     07BB  3055               	movlw	85
   558     07BC  00F4               	movwf	??_Lcdinit
   559     07BD                     u67:
   560     07BD  0BF4               	decfsz	??_Lcdinit,f
   561     07BE  2FBD               	goto	u67
   562     07BF  0BF5               	decfsz	??_Lcdinit+1,f
   563     07C0  2FBD               	goto	u67
   564     07C1  0BF6               	decfsz	??_Lcdinit+2,f
   565     07C2  2FBD               	goto	u67
   566     07C3  2FC4               	nop2
   567     07C4                     l615:
   568                           
   569                           ;main.c: 45:     LcdCommand(0x0C);
   570     07C4  300C               	movlw	12
   571     07C5  120A  118A  271E  120A  118A  	fcall	_LcdCommand
   572     07CA                     l617:
   573                           
   574                           ;main.c: 46:     _delay((unsigned long)((100)*(20000000/4000.0)));
   575     07CA  3003               	movlw	3
   576     07CB  00F6               	movwf	??_Lcdinit+2
   577     07CC  308A               	movlw	138
   578     07CD  00F5               	movwf	??_Lcdinit+1
   579     07CE  3055               	movlw	85
   580     07CF  00F4               	movwf	??_Lcdinit
   581     07D0                     u77:
   582     07D0  0BF4               	decfsz	??_Lcdinit,f
   583     07D1  2FD0               	goto	u77
   584     07D2  0BF5               	decfsz	??_Lcdinit+1,f
   585     07D3  2FD0               	goto	u77
   586     07D4  0BF6               	decfsz	??_Lcdinit+2,f
   587     07D5  2FD0               	goto	u77
   588     07D6  2FD7               	nop2
   589     07D7                     l619:
   590                           
   591                           ;main.c: 47:     LcdCommand(0x01);
   592     07D7  3001               	movlw	1
   593     07D8  120A  118A  271E  120A  118A  	fcall	_LcdCommand
   594     07DD                     l621:
   595                           
   596                           ;main.c: 48:     _delay((unsigned long)((100)*(20000000/4000.0)));
   597     07DD  3003               	movlw	3
   598     07DE  00F6               	movwf	??_Lcdinit+2
   599     07DF  308A               	movlw	138
   600     07E0  00F5               	movwf	??_Lcdinit+1
   601     07E1  3055               	movlw	85
   602     07E2  00F4               	movwf	??_Lcdinit
   603     07E3                     u87:
   604     07E3  0BF4               	decfsz	??_Lcdinit,f
   605     07E4  2FE3               	goto	u87
   606     07E5  0BF5               	decfsz	??_Lcdinit+1,f
   607     07E6  2FE3               	goto	u87
   608     07E7  0BF6               	decfsz	??_Lcdinit+2,f
   609     07E8  2FE3               	goto	u87
   610     07E9  2FEA               	nop2
   611     07EA                     l37:
   612     07EA  0008               	return
   613     07EB                     __end_of_Lcdinit:
   614                           
   615                           	psect	text2
   616     071E                     __ptext2:	
   617 ;; *************** function _LcdCommand *****************
   618 ;; Defined at:
   619 ;;		line 61 in file "main.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;  i               1    wreg     unsigned char 
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  i               1    3[COMMON] unsigned char 
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         0       0       0       0       0
   634 ;;      Locals:         1       0       0       0       0
   635 ;;      Temps:          3       0       0       0       0
   636 ;;      Totals:         4       0       0       0       0
   637 ;;Total ram usage:        4 bytes
   638 ;; Hardware stack levels used: 1
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_main
   643 ;;		_Lcdinit
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647     071E                     _LcdCommand:	
   648                           ;psect for function _LcdCommand
   649                           
   650                           
   651                           ;incstack = 0
   652                           ; Regs used in _LcdCommand: [wreg+status,2+status,0]
   653                           ;LcdCommand@i stored from wreg
   654     071E  00F3               	movwf	LcdCommand@i
   655     071F                     l587:
   656                           
   657                           ;main.c: 61: void LcdCommand(uint8_t i);main.c: 62: {;main.c: 63:     PORTC &= ~(0x1 << 
      +                          3);
   658     071F  30F7               	movlw	247
   659     0720  1283               	bcf	3,5	;RP0=0, select bank0
   660     0721  1303               	bcf	3,6	;RP1=0, select bank0
   661     0722  0587               	andwf	7,f	;volatile
   662     0723                     l589:
   663                           
   664                           ;main.c: 64:     PORTD = i;
   665     0723  0873               	movf	LcdCommand@i,w
   666     0724  0088               	movwf	8	;volatile
   667     0725                     l591:
   668                           
   669                           ;main.c: 65:     PORTC |= (0x1 << 0);
   670     0725  1407               	bsf	7,0	;volatile
   671     0726                     l593:
   672                           
   673                           ;main.c: 66:     _delay((unsigned long)((100)*(20000000/4000.0)));
   674     0726  3003               	movlw	3
   675     0727  00F2               	movwf	??_LcdCommand+2
   676     0728  308A               	movlw	138
   677     0729  00F1               	movwf	??_LcdCommand+1
   678     072A  3055               	movlw	85
   679     072B  00F0               	movwf	??_LcdCommand
   680     072C                     u97:
   681     072C  0BF0               	decfsz	??_LcdCommand,f
   682     072D  2F2C               	goto	u97
   683     072E  0BF1               	decfsz	??_LcdCommand+1,f
   684     072F  2F2C               	goto	u97
   685     0730  0BF2               	decfsz	??_LcdCommand+2,f
   686     0731  2F2C               	goto	u97
   687     0732  2F33               	nop2
   688                           
   689                           ;main.c: 67:     PORTC &= ~(0x1 << 0);
   690     0733  30FE               	movlw	254
   691     0734  1283               	bcf	3,5	;RP0=0, select bank0
   692     0735  1303               	bcf	3,6	;RP1=0, select bank0
   693     0736  0587               	andwf	7,f	;volatile
   694     0737                     l43:
   695     0737  0008               	return
   696     0738                     __end_of_LcdCommand:
   697                           
   698                           	psect	text3
   699     0705                     __ptext3:	
   700 ;; *************** function _LcdData *****************
   701 ;; Defined at:
   702 ;;		line 52 in file "main.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  i               1    wreg     unsigned char 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  i               1    3[COMMON] unsigned char 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, status,2, status,0
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   716 ;;      Params:         0       0       0       0       0
   717 ;;      Locals:         1       0       0       0       0
   718 ;;      Temps:          3       0       0       0       0
   719 ;;      Totals:         4       0       0       0       0
   720 ;;Total ram usage:        4 bytes
   721 ;; Hardware stack levels used: 1
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729     0705                     _LcdData:	
   730                           ;psect for function _LcdData
   731                           
   732                           
   733                           ;incstack = 0
   734                           ; Regs used in _LcdData: [wreg+status,2+status,0]
   735                           ;LcdData@i stored from wreg
   736     0705  00F3               	movwf	LcdData@i
   737     0706                     l623:
   738                           
   739                           ;main.c: 52: void LcdData(uint8_t i);main.c: 53: {;main.c: 54:     PORTC |= (0x1 << 3);
   740     0706  1283               	bcf	3,5	;RP0=0, select bank0
   741     0707  1303               	bcf	3,6	;RP1=0, select bank0
   742     0708  1587               	bsf	7,3	;volatile
   743     0709                     l625:
   744                           
   745                           ;main.c: 55:     PORTD = i;
   746     0709  0873               	movf	LcdData@i,w
   747     070A  0088               	movwf	8	;volatile
   748     070B                     l627:
   749                           
   750                           ;main.c: 56:     PORTC |= (0x1 << 0);
   751     070B  1407               	bsf	7,0	;volatile
   752                           
   753                           ;main.c: 57:     _delay((unsigned long)((100)*(20000000/4000.0)));
   754     070C  3003               	movlw	3
   755     070D  00F2               	movwf	??_LcdData+2
   756     070E  308A               	movlw	138
   757     070F  00F1               	movwf	??_LcdData+1
   758     0710  3055               	movlw	85
   759     0711  00F0               	movwf	??_LcdData
   760     0712                     u107:
   761     0712  0BF0               	decfsz	??_LcdData,f
   762     0713  2F12               	goto	u107
   763     0714  0BF1               	decfsz	??_LcdData+1,f
   764     0715  2F12               	goto	u107
   765     0716  0BF2               	decfsz	??_LcdData+2,f
   766     0717  2F12               	goto	u107
   767     0718  2F19               	nop2
   768     0719                     l629:
   769                           
   770                           ;main.c: 58:     PORTC &= ~(0x1 << 0);
   771     0719  30FE               	movlw	254
   772     071A  1283               	bcf	3,5	;RP0=0, select bank0
   773     071B  1303               	bcf	3,6	;RP1=0, select bank0
   774     071C  0587               	andwf	7,f	;volatile
   775     071D                     l40:
   776     071D  0008               	return
   777     071E                     __end_of_LcdData:
   778     0002                     ___latbits      equ	2
   779     007E                     btemp           set	126	;btemp
   780     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80      0      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Lcdinit
    _Lcdinit->_LcdCommand

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     105
                                              7 COMMON     2     2      0
                         _LcdCommand
                            _LcdData
                            _Lcdinit
 ---------------------------------------------------------------------------------
 (1) _Lcdinit                                              3     3      0      15
                                              4 COMMON     3     3      0
                         _LcdCommand
 ---------------------------------------------------------------------------------
 (2) _LcdCommand                                           4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _LcdData                                              4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcdCommand
   _LcdData
   _Lcdinit
     _LcdCommand

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0      18     22.5%
BITBANK0            80      0       0      0.0%
COMMON              14      9      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      30      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Mar 10 16:05:20 2025

                      _a 0020                        _i 007A                        _m 0079  
                      _x 007B                        pc 0002                       l31 0763  
                     l40 071D                       l43 0737                       l37 07EA  
                     u10 0763                       u11 0762                       u15 075F  
                     u27 0771                       u37 0784                       u47 0797  
                     u57 07AA                       u67 07BD                       u77 07D0  
                     u87 07E3                       u97 072C                       fsr 0004  
                    l601 077E                      l611 07B1                      l603 078B  
                    l621 07DD                      l613 07B7                      l605 0791  
                    l623 0706                      l615 07C4                      l607 079E  
                    l631 0738                      l625 0709                      l617 07CA  
                    l609 07A4                      l641 0746                      l633 073D  
                    l627 070B                      l619 07D7                      l643 0750  
                    l629 0719                      l645 0756                      l591 0725  
                    l639 073F                      l593 0726                      l587 071F  
                    l595 0767                      l589 0723                      l597 076B  
                    l599 0778                      u107 0712                      fsr0 0004  
                    indf 0000                     _main 0738                     btemp 007E  
                   start 0000          __end_of_LcdData 071E               _LcdCommand 071E  
        __end_of_Lcdinit 07EB                    ?_main 0070                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
                  main@i 0077                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EB             __end_of_main 0767  
                 ??_main 0077                ??_LcdData 0070                ??_Lcdinit 0074  
            ?_LcdCommand 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 06E0               __pmaintext 0738                  _LcdData 0705  
                _Lcdinit 0767                  __ptext1 0767                  __ptext2 071E  
                __ptext3 0705     end_of_initialization 07FC             ??_LcdCommand 0070  
     __end_of_LcdCommand 0738      start_initialization 07EB               init_fetch0 06F2  
            __pdataBANK0 0020              __pbssCOMMON 0079                ___latbits 0002  
               ?_LcdData 0070                 ?_Lcdinit 0070                 LcdData@i 0073  
            LcdCommand@i 0073                 init_ram0 06F6  
